@startuml

abstract class Transaction
class DataAuditDeal
class DataRecuritDeal
class DataExchangeDeal{
    ID: ExchangeID
    Time: exchangeTime
    ID: PartyA
    ID: PartyB
    ID:  supervisor
    enum:status::{going, finished}
    string: exchangeSignature
    int: amount
    ID： DataRequirementID
    ID： DataAssetID

    contruct DataExchangeDeal(DataRequirementID,DataAssetID)

    queryExchange(byID)
    queryExchange(between Time)






}
class TokenTransferDeal
class DataPostDeal
class DataStorage

Transaction<|-- DataAuditDeal

Transaction<|-- DataRecuritDeal

Transaction<|-- TokenTransferDeal

Transaction<|-- DataExchangeDeal

Transaction<|-- DataPostDeal

Transaction<|-- DataStorage


DataExchangeDeal<-->TokenTransferDeal :depend
DataPostDeal<-->TokenTransferDeal  :depend
DataAuditDeal<-->TokenTransferDeal  :depend
DataStorage<-->TokenTransferDeal  :depend

DataExchangeDeal<-->ExchangeContract
TokenTransferDeal<--->TokenTransferContract

@enduml