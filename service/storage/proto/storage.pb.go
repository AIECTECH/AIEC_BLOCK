// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/code/bottos/service/storemanagement/proto/storage.proto

/*
Package storemanagement is a generated protocol buffer package.

It is generated from these files:
	github.com/code/bottos/service/storemanagement/proto/storage.proto

It has these top-level messages:
	Request
	Response
	FileUploadRequest
	FileUploadResponse
	DownLoadRequest
	DownLoadResponse
*/
package storemanagement

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Request struct {
	Txid    string `protobuf:"bytes,1,opt,name=txid" json:"txid,omitempty"`
	Account string `protobuf:"bytes,2,opt,name=account" json:"account,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Request) GetTxid() string {
	if m != nil {
		return m.Txid
	}
	return ""
}

func (m *Request) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

type Response struct {
	Msg string `protobuf:"bytes,1,opt,name=msg" json:"msg,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Response) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type FileUploadRequest struct {
	Username   string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	FileName   string `protobuf:"bytes,2,opt,name=fileName" json:"fileName,omitempty"`
	FileSize   int64  `protobuf:"varint,3,opt,name=fileSize" json:"fileSize,omitempty"`
	FilePolicy string `protobuf:"bytes,4,opt,name=filePolicy" json:"filePolicy,omitempty"`
	NumOfFiles string `protobuf:"bytes,5,opt,name=numOfFiles" json:"numOfFiles,omitempty"`
	Signature  string `protobuf:"bytes,6,opt,name=signature" json:"signature,omitempty"`
}

func (m *FileUploadRequest) Reset()                    { *m = FileUploadRequest{} }
func (m *FileUploadRequest) String() string            { return proto.CompactTextString(m) }
func (*FileUploadRequest) ProtoMessage()               {}
func (*FileUploadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *FileUploadRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *FileUploadRequest) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *FileUploadRequest) GetFileSize() int64 {
	if m != nil {
		return m.FileSize
	}
	return 0
}

func (m *FileUploadRequest) GetFilePolicy() string {
	if m != nil {
		return m.FilePolicy
	}
	return ""
}

func (m *FileUploadRequest) GetNumOfFiles() string {
	if m != nil {
		return m.NumOfFiles
	}
	return ""
}

func (m *FileUploadRequest) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type FileUploadResponse struct {
	Result          string `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	Message         string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	PresignedPutURL string `protobuf:"bytes,3,opt,name=presignedPutURL" json:"presignedPutURL,omitempty"`
}

func (m *FileUploadResponse) Reset()                    { *m = FileUploadResponse{} }
func (m *FileUploadResponse) String() string            { return proto.CompactTextString(m) }
func (*FileUploadResponse) ProtoMessage()               {}
func (*FileUploadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *FileUploadResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func (m *FileUploadResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *FileUploadResponse) GetPresignedPutURL() string {
	if m != nil {
		return m.PresignedPutURL
	}
	return ""
}

type DownLoadRequest struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	FileName string `protobuf:"bytes,2,opt,name=fileName" json:"fileName,omitempty"`
}

func (m *DownLoadRequest) Reset()                    { *m = DownLoadRequest{} }
func (m *DownLoadRequest) String() string            { return proto.CompactTextString(m) }
func (*DownLoadRequest) ProtoMessage()               {}
func (*DownLoadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *DownLoadRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *DownLoadRequest) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

type DownLoadResponse struct {
	Result          string `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	Message         string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	PresignedGetURL string `protobuf:"bytes,3,opt,name=presignedGetURL" json:"presignedGetURL,omitempty"`
}

func (m *DownLoadResponse) Reset()                    { *m = DownLoadResponse{} }
func (m *DownLoadResponse) String() string            { return proto.CompactTextString(m) }
func (*DownLoadResponse) ProtoMessage()               {}
func (*DownLoadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *DownLoadResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func (m *DownLoadResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DownLoadResponse) GetPresignedGetURL() string {
	if m != nil {
		return m.PresignedGetURL
	}
	return ""
}

func init() {
	proto.RegisterType((*Request)(nil), "storemanagement.Request")
	proto.RegisterType((*Response)(nil), "storemanagement.Response")
	proto.RegisterType((*FileUploadRequest)(nil), "storemanagement.FileUploadRequest")
	proto.RegisterType((*FileUploadResponse)(nil), "storemanagement.FileUploadResponse")
	proto.RegisterType((*DownLoadRequest)(nil), "storemanagement.DownLoadRequest")
	proto.RegisterType((*DownLoadResponse)(nil), "storemanagement.DownLoadResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Storagemanagement service

type StoragemanagementClient interface {
	GetTx(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error)
	GetFileUploadURL(ctx context.Context, in *FileUploadRequest, opts ...client.CallOption) (*FileUploadResponse, error)
	GetDownLoadURL(ctx context.Context, in *DownLoadRequest, opts ...client.CallOption) (*DownLoadResponse, error)
}

type storagemanagementClient struct {
	c           client.Client
	serviceName string
}

func NewStoragemanagementClient(serviceName string, c client.Client) StoragemanagementClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "storemanagement"
	}
	return &storagemanagementClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *storagemanagementClient) GetTx(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Storagemanagement.GetTx", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storagemanagementClient) GetFileUploadURL(ctx context.Context, in *FileUploadRequest, opts ...client.CallOption) (*FileUploadResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Storagemanagement.GetFileUploadURL", in)
	out := new(FileUploadResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storagemanagementClient) GetDownLoadURL(ctx context.Context, in *DownLoadRequest, opts ...client.CallOption) (*DownLoadResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Storagemanagement.GetDownLoadURL", in)
	out := new(DownLoadResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Storagemanagement service

type StoragemanagementHandler interface {
	GetTx(context.Context, *Request, *Response) error
	GetFileUploadURL(context.Context, *FileUploadRequest, *FileUploadResponse) error
	GetDownLoadURL(context.Context, *DownLoadRequest, *DownLoadResponse) error
}

func RegisterStoragemanagementHandler(s server.Server, hdlr StoragemanagementHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Storagemanagement{hdlr}, opts...))
}

type Storagemanagement struct {
	StoragemanagementHandler
}

func (h *Storagemanagement) GetTx(ctx context.Context, in *Request, out *Response) error {
	return h.StoragemanagementHandler.GetTx(ctx, in, out)
}

func (h *Storagemanagement) GetFileUploadURL(ctx context.Context, in *FileUploadRequest, out *FileUploadResponse) error {
	return h.StoragemanagementHandler.GetFileUploadURL(ctx, in, out)
}

func (h *Storagemanagement) GetDownLoadURL(ctx context.Context, in *DownLoadRequest, out *DownLoadResponse) error {
	return h.StoragemanagementHandler.GetDownLoadURL(ctx, in, out)
}

func init() {
	proto.RegisterFile("github.com/code/bottos/service/storemanagement/proto/storage.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 416 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x53, 0x4d, 0x6f, 0xd4, 0x30,
	0x10, 0x25, 0xdd, 0x76, 0xdb, 0x9d, 0x03, 0xbb, 0xf5, 0x01, 0x99, 0xa8, 0x42, 0x8b, 0xb9, 0xec,
	0x29, 0x91, 0xe0, 0xc0, 0x8d, 0x03, 0x42, 0x44, 0x48, 0x2b, 0xa8, 0x52, 0x56, 0x9c, 0x38, 0x78,
	0x93, 0x69, 0xb0, 0x94, 0xd8, 0x21, 0xb6, 0xa1, 0xf0, 0x17, 0xf8, 0x5d, 0xfc, 0x2f, 0x64, 0xe7,
	0xab, 0xca, 0x56, 0xbd, 0xd0, 0xdb, 0xbc, 0xf7, 0x66, 0x26, 0xf3, 0xc6, 0x13, 0x78, 0x5b, 0x08,
	0xf3, 0xcd, 0xee, 0xa3, 0x4c, 0x55, 0x71, 0xa6, 0x72, 0x8c, 0xf7, 0xca, 0x18, 0xa5, 0x63, 0x8d,
	0xcd, 0x0f, 0x91, 0x61, 0xac, 0x8d, 0x6a, 0xb0, 0xe2, 0x92, 0x17, 0x58, 0xa1, 0x34, 0x71, 0xdd,
	0x28, 0xa3, 0x3c, 0xcb, 0x0b, 0x8c, 0x3c, 0x22, 0xcb, 0x49, 0x12, 0x7b, 0x0d, 0xa7, 0x29, 0x7e,
	0xb7, 0xa8, 0x0d, 0x21, 0x70, 0x6c, 0x6e, 0x44, 0x4e, 0x83, 0x75, 0xb0, 0x59, 0xa4, 0x3e, 0x26,
	0x14, 0x4e, 0x79, 0x96, 0x29, 0x2b, 0x0d, 0x3d, 0xf2, 0x74, 0x0f, 0xd9, 0x05, 0x9c, 0xa5, 0xa8,
	0x6b, 0x25, 0x35, 0x92, 0x15, 0xcc, 0x2a, 0x5d, 0x74, 0x85, 0x2e, 0x64, 0x7f, 0x03, 0x38, 0x7f,
	0x2f, 0x4a, 0xdc, 0xd5, 0xa5, 0xe2, 0x79, 0xff, 0x85, 0x10, 0xce, 0xac, 0xc6, 0x46, 0xf2, 0x0a,
	0xbb, 0xe4, 0x01, 0x3b, 0xed, 0x5a, 0x94, 0xf8, 0xd1, 0x69, 0xed, 0xa7, 0x06, 0xdc, 0x6b, 0x57,
	0xe2, 0x37, 0xd2, 0xd9, 0x3a, 0xd8, 0xcc, 0xd2, 0x01, 0x93, 0x67, 0x00, 0x2e, 0xbe, 0x54, 0xa5,
	0xc8, 0x7e, 0xd1, 0x63, 0x5f, 0x79, 0x8b, 0x71, 0xba, 0xb4, 0xd5, 0xa7, 0x6b, 0x37, 0x8d, 0xa6,
	0x27, 0xad, 0x3e, 0x32, 0xe4, 0x02, 0x16, 0x5a, 0x14, 0x92, 0x1b, 0xdb, 0x20, 0x9d, 0x7b, 0x79,
	0x24, 0x58, 0x0d, 0xe4, 0xb6, 0x8d, 0xce, 0xef, 0x13, 0x98, 0x37, 0xa8, 0x6d, 0x69, 0x3a, 0x17,
	0x1d, 0x72, 0xdb, 0xaa, 0x50, 0x6b, 0x5e, 0xf4, 0x16, 0x7a, 0x48, 0x36, 0xb0, 0xac, 0x1b, 0x74,
	0x7d, 0x31, 0xbf, 0xb4, 0x66, 0x97, 0x6e, 0xbd, 0x91, 0x45, 0x3a, 0xa5, 0xd9, 0x07, 0x58, 0xbe,
	0x53, 0x3f, 0xe5, 0xf6, 0xff, 0xd7, 0xc6, 0x24, 0xac, 0xc6, 0x56, 0x0f, 0x32, 0x7a, 0x82, 0x77,
	0x8e, 0xde, 0xd2, 0x2f, 0xff, 0x1c, 0xc1, 0xf9, 0x55, 0x7b, 0x6e, 0xe3, 0x85, 0x91, 0x37, 0x70,
	0x92, 0xa0, 0xf9, 0x7c, 0x43, 0x68, 0x34, 0x39, 0xbe, 0xa8, 0x33, 0x18, 0x3e, 0xbd, 0x43, 0x69,
	0xe7, 0x65, 0x8f, 0xc8, 0x57, 0x58, 0x25, 0x68, 0xc6, 0x57, 0xd8, 0xa5, 0x5b, 0xc2, 0x0e, 0x0a,
	0x0e, 0x8e, 0x2d, 0x7c, 0x71, 0x6f, 0xce, 0xd0, 0xfe, 0x0b, 0x3c, 0x4e, 0xd0, 0xf4, 0x7b, 0x72,
	0xcd, 0xd7, 0x07, 0x85, 0x93, 0x07, 0x09, 0x9f, 0xdf, 0x93, 0xd1, 0x37, 0xde, 0xcf, 0xfd, 0x1f,
	0xf7, 0xea, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4e, 0x82, 0x67, 0xba, 0xb7, 0x03, 0x00, 0x00,
}
