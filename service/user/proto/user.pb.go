// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

/*
Package user is a generated protocol buffer package.

It is generated from these files:
	user.proto

It has these top-level messages:
	RegisterRequest
	AccountInfo
	UserInfo
	RegisterResponse
	LoginRequest
	LoginResponse
	LogoutRequest
	LogoutResponse
	GetBlockHeaderRequest
	GetBlockHeaderResponse
	BlockHeader
*/
package user

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RegisterRequest struct {
	Account     *AccountInfo `protobuf:"bytes,1,opt,name=account" json:"account"`
	User        *UserInfo    `protobuf:"bytes,2,opt,name=user" json:"user"`
	VerifyId    string       `protobuf:"bytes,3,opt,name=verify_id,json=verifyId" json:"verify_id"`
	VerifyValue string       `protobuf:"bytes,4,opt,name=verify_value,json=verifyValue" json:"verify_value"`
}

func (m *RegisterRequest) Reset()                    { *m = RegisterRequest{} }
func (m *RegisterRequest) String() string            { return proto.CompactTextString(m) }
func (*RegisterRequest) ProtoMessage()               {}
func (*RegisterRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RegisterRequest) GetAccount() *AccountInfo {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *RegisterRequest) GetUser() *UserInfo {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *RegisterRequest) GetVerifyId() string {
	if m != nil {
		return m.VerifyId
	}
	return ""
}

func (m *RegisterRequest) GetVerifyValue() string {
	if m != nil {
		return m.VerifyValue
	}
	return ""
}

type AccountInfo struct {
	Creator string `protobuf:"bytes,1,opt,name=creator" json:"creator"`
	Name    string `protobuf:"bytes,2,opt,name=name" json:"name"`
	Pubkey  string `protobuf:"bytes,3,opt,name=pubkey" json:"pubkey"`
	Deposit uint64 `protobuf:"varint,4,opt,name=deposit" json:"deposit"`
}

func (m *AccountInfo) Reset()                    { *m = AccountInfo{} }
func (m *AccountInfo) String() string            { return proto.CompactTextString(m) }
func (*AccountInfo) ProtoMessage()               {}
func (*AccountInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AccountInfo) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *AccountInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AccountInfo) GetPubkey() string {
	if m != nil {
		return m.Pubkey
	}
	return ""
}

func (m *AccountInfo) GetDeposit() uint64 {
	if m != nil {
		return m.Deposit
	}
	return 0
}

type UserInfo struct {
	Version     uint64 `protobuf:"varint,1,opt,name=version" json:"version"`
	CursorNum   uint64 `protobuf:"varint,2,opt,name=cursor_num,json=cursorNum" json:"cursor_num"`
	CursorLabel uint64 `protobuf:"varint,3,opt,name=cursor_label,json=cursorLabel" json:"cursor_label"`
	Lifetime    uint64 `protobuf:"varint,4,opt,name=lifetime" json:"lifetime"`
	Sender      string `protobuf:"bytes,5,opt,name=sender" json:"sender"`
	Contract    string `protobuf:"bytes,6,opt,name=contract" json:"contract"`
	Method      string `protobuf:"bytes,7,opt,name=method" json:"method"`
	Param       string `protobuf:"bytes,8,opt,name=param" json:"param"`
	SigAlg      uint64 `protobuf:"varint,9,opt,name=sig_alg,json=sigAlg" json:"sig_alg"`
	Signature   string `protobuf:"bytes,10,opt,name=signature" json:"signature"`
}

func (m *UserInfo) Reset()                    { *m = UserInfo{} }
func (m *UserInfo) String() string            { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()               {}
func (*UserInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *UserInfo) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *UserInfo) GetCursorNum() uint64 {
	if m != nil {
		return m.CursorNum
	}
	return 0
}

func (m *UserInfo) GetCursorLabel() uint64 {
	if m != nil {
		return m.CursorLabel
	}
	return 0
}

func (m *UserInfo) GetLifetime() uint64 {
	if m != nil {
		return m.Lifetime
	}
	return 0
}

func (m *UserInfo) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *UserInfo) GetContract() string {
	if m != nil {
		return m.Contract
	}
	return ""
}

func (m *UserInfo) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *UserInfo) GetParam() string {
	if m != nil {
		return m.Param
	}
	return ""
}

func (m *UserInfo) GetSigAlg() uint64 {
	if m != nil {
		return m.SigAlg
	}
	return 0
}

func (m *UserInfo) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type RegisterResponse struct {
	Code int32  `protobuf:"varint,1,opt,name=code" json:"code"`
	Msg  string `protobuf:"bytes,2,opt,name=msg" json:"msg"`
}

func (m *RegisterResponse) Reset()                    { *m = RegisterResponse{} }
func (m *RegisterResponse) String() string            { return proto.CompactTextString(m) }
func (*RegisterResponse) ProtoMessage()               {}
func (*RegisterResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *RegisterResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *RegisterResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type LoginRequest struct {
	Body   string `protobuf:"bytes,1,opt,name=body" json:"body"`
	Header string `protobuf:"bytes,2,opt,name=header" json:"header"`
}

func (m *LoginRequest) Reset()                    { *m = LoginRequest{} }
func (m *LoginRequest) String() string            { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()               {}
func (*LoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *LoginRequest) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *LoginRequest) GetHeader() string {
	if m != nil {
		return m.Header
	}
	return ""
}

type LoginResponse struct {
	Code  int64  `protobuf:"varint,1,opt,name=code" json:"code"`
	Token string `protobuf:"bytes,2,opt,name=token" json:"token"`
	Msg   string `protobuf:"bytes,3,opt,name=msg" json:"msg"`
}

func (m *LoginResponse) Reset()                    { *m = LoginResponse{} }
func (m *LoginResponse) String() string            { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()               {}
func (*LoginResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *LoginResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *LoginResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *LoginResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type LogoutRequest struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username"`
	Token    string `protobuf:"bytes,2,opt,name=token" json:"token"`
}

func (m *LogoutRequest) Reset()                    { *m = LogoutRequest{} }
func (m *LogoutRequest) String() string            { return proto.CompactTextString(m) }
func (*LogoutRequest) ProtoMessage()               {}
func (*LogoutRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *LogoutRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *LogoutRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type LogoutResponse struct {
	Code int64  `protobuf:"varint,1,opt,name=code" json:"code"`
	Msg  string `protobuf:"bytes,2,opt,name=msg" json:"msg"`
}

func (m *LogoutResponse) Reset()                    { *m = LogoutResponse{} }
func (m *LogoutResponse) String() string            { return proto.CompactTextString(m) }
func (*LogoutResponse) ProtoMessage()               {}
func (*LogoutResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *LogoutResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *LogoutResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type GetBlockHeaderRequest struct {
}

func (m *GetBlockHeaderRequest) Reset()                    { *m = GetBlockHeaderRequest{} }
func (m *GetBlockHeaderRequest) String() string            { return proto.CompactTextString(m) }
func (*GetBlockHeaderRequest) ProtoMessage()               {}
func (*GetBlockHeaderRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type GetBlockHeaderResponse struct {
	Code int64        `protobuf:"varint,1,opt,name=code" json:"code"`
	Msg  string       `protobuf:"bytes,2,opt,name=msg" json:"msg"`
	Data *BlockHeader `protobuf:"bytes,3,opt,name=data" json:"data"`
}

func (m *GetBlockHeaderResponse) Reset()                    { *m = GetBlockHeaderResponse{} }
func (m *GetBlockHeaderResponse) String() string            { return proto.CompactTextString(m) }
func (*GetBlockHeaderResponse) ProtoMessage()               {}
func (*GetBlockHeaderResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *GetBlockHeaderResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetBlockHeaderResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *GetBlockHeaderResponse) GetData() *BlockHeader {
	if m != nil {
		return m.Data
	}
	return nil
}

type BlockHeader struct {
	HeadBlockNum          uint64 `protobuf:"varint,1,opt,name=head_block_num,json=headBlockNum" json:"head_block_num"`
	HeadBlockHash         string `protobuf:"bytes,2,opt,name=head_block_hash,json=headBlockHash" json:"head_block_hash"`
	HeadBlockTime         uint64 `protobuf:"varint,3,opt,name=head_block_time,json=headBlockTime" json:"head_block_time"`
	HeadBlockDelegate     string `protobuf:"bytes,4,opt,name=head_block_delegate,json=headBlockDelegate" json:"head_block_delegate"`
	CursorLabel           uint64 `protobuf:"varint,5,opt,name=cursor_label,json=cursorLabel" json:"cursor_label"`
	LastConsensusBlockNum uint64 `protobuf:"varint,6,opt,name=last_consensus_block_num,json=lastConsensusBlockNum" json:"last_consensus_block_num"`
}

func (m *BlockHeader) Reset()                    { *m = BlockHeader{} }
func (m *BlockHeader) String() string            { return proto.CompactTextString(m) }
func (*BlockHeader) ProtoMessage()               {}
func (*BlockHeader) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *BlockHeader) GetHeadBlockNum() uint64 {
	if m != nil {
		return m.HeadBlockNum
	}
	return 0
}

func (m *BlockHeader) GetHeadBlockHash() string {
	if m != nil {
		return m.HeadBlockHash
	}
	return ""
}

func (m *BlockHeader) GetHeadBlockTime() uint64 {
	if m != nil {
		return m.HeadBlockTime
	}
	return 0
}

func (m *BlockHeader) GetHeadBlockDelegate() string {
	if m != nil {
		return m.HeadBlockDelegate
	}
	return ""
}

func (m *BlockHeader) GetCursorLabel() uint64 {
	if m != nil {
		return m.CursorLabel
	}
	return 0
}

func (m *BlockHeader) GetLastConsensusBlockNum() uint64 {
	if m != nil {
		return m.LastConsensusBlockNum
	}
	return 0
}

func init() {
	proto.RegisterType((*RegisterRequest)(nil), "RegisterRequest")
	proto.RegisterType((*AccountInfo)(nil), "AccountInfo")
	proto.RegisterType((*UserInfo)(nil), "UserInfo")
	proto.RegisterType((*RegisterResponse)(nil), "RegisterResponse")
	proto.RegisterType((*LoginRequest)(nil), "LoginRequest")
	proto.RegisterType((*LoginResponse)(nil), "LoginResponse")
	proto.RegisterType((*LogoutRequest)(nil), "LogoutRequest")
	proto.RegisterType((*LogoutResponse)(nil), "LogoutResponse")
	proto.RegisterType((*GetBlockHeaderRequest)(nil), "GetBlockHeaderRequest")
	proto.RegisterType((*GetBlockHeaderResponse)(nil), "GetBlockHeaderResponse")
	proto.RegisterType((*BlockHeader)(nil), "BlockHeader")
}

func init() { proto.RegisterFile("user.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 695 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x5d, 0x6b, 0xdb, 0x4a,
	0x10, 0xb5, 0x63, 0xf9, 0x43, 0x63, 0xc7, 0x49, 0xf6, 0xe6, 0x43, 0xf8, 0xde, 0x40, 0xae, 0xb8,
	0x84, 0xc0, 0x05, 0x41, 0x53, 0x68, 0x4b, 0xdf, 0xd2, 0x14, 0x9a, 0xd0, 0xd0, 0x07, 0xd1, 0xf6,
	0xd5, 0x5d, 0x4b, 0x1b, 0x59, 0x44, 0xd2, 0xba, 0xbb, 0xab, 0x40, 0x7e, 0x45, 0x5f, 0x0b, 0xfd,
	0x5d, 0xfd, 0x3f, 0x65, 0x67, 0x77, 0x6d, 0xc5, 0x31, 0x85, 0xbe, 0xed, 0x39, 0x33, 0x3b, 0x73,
	0x66, 0x74, 0x56, 0x00, 0xb5, 0x64, 0x22, 0x5a, 0x08, 0xae, 0x78, 0xf8, 0xbd, 0x0d, 0x3b, 0x31,
	0xcb, 0x72, 0xa9, 0x98, 0x88, 0xd9, 0xd7, 0x9a, 0x49, 0x45, 0x4e, 0xa1, 0x4f, 0x93, 0x84, 0xd7,
	0x95, 0x0a, 0xda, 0x27, 0xed, 0xb3, 0xe1, 0xf9, 0x28, 0xba, 0x30, 0xf8, 0xba, 0xba, 0xe5, 0xb1,
	0x0b, 0x92, 0x63, 0xf0, 0x74, 0xa5, 0x60, 0x0b, 0x93, 0xfc, 0xe8, 0x93, 0x64, 0x02, 0x33, 0x90,
	0x26, 0x7f, 0x83, 0x7f, 0xcf, 0x44, 0x7e, 0xfb, 0x30, 0xcd, 0xd3, 0xa0, 0x73, 0xd2, 0x3e, 0xf3,
	0xe3, 0x81, 0x21, 0xae, 0x53, 0xf2, 0x2f, 0x8c, 0x6c, 0xf0, 0x9e, 0x16, 0x35, 0x0b, 0x3c, 0x8c,
	0x0f, 0x0d, 0xf7, 0x59, 0x53, 0x61, 0x09, 0xc3, 0x46, 0x5b, 0x12, 0x40, 0x3f, 0x11, 0x8c, 0x2a,
	0x2e, 0x50, 0x95, 0x1f, 0x3b, 0x48, 0x08, 0x78, 0x15, 0x2d, 0x19, 0xea, 0xf0, 0x63, 0x3c, 0x93,
	0x43, 0xe8, 0x2d, 0xea, 0xd9, 0x1d, 0x7b, 0xb0, 0x9d, 0x2d, 0xd2, 0x55, 0x52, 0xb6, 0xe0, 0x32,
	0x57, 0xd8, 0xd2, 0x8b, 0x1d, 0x0c, 0x7f, 0x6c, 0xc1, 0xc0, 0x4d, 0xa0, 0xd3, 0xee, 0x99, 0x90,
	0x39, 0xaf, 0xb0, 0x99, 0x17, 0x3b, 0x48, 0x8e, 0x01, 0x92, 0x5a, 0x48, 0x2e, 0xa6, 0x55, 0x5d,
	0x62, 0x4b, 0x2f, 0xf6, 0x0d, 0xf3, 0xa1, 0x2e, 0xf5, 0x5c, 0x36, 0x5c, 0xd0, 0x19, 0x2b, 0xb0,
	0xbb, 0x17, 0x0f, 0x0d, 0x77, 0xa3, 0x29, 0x32, 0x81, 0x41, 0x91, 0xdf, 0x32, 0x95, 0x97, 0xcc,
	0x6a, 0x58, 0x62, 0x2d, 0x5b, 0xb2, 0x2a, 0x65, 0x22, 0xe8, 0x1a, 0xd9, 0x06, 0xe9, 0x3b, 0x09,
	0xaf, 0x94, 0xa0, 0x89, 0x0a, 0x7a, 0x66, 0x95, 0x0e, 0xeb, 0x3b, 0x25, 0x53, 0x73, 0x9e, 0x06,
	0x7d, 0x73, 0xc7, 0x20, 0xb2, 0x0f, 0xdd, 0x05, 0x15, 0xb4, 0x0c, 0x06, 0x48, 0x1b, 0x40, 0x8e,
	0xa0, 0x2f, 0xf3, 0x6c, 0x4a, 0x8b, 0x2c, 0xf0, 0xb1, 0x79, 0x4f, 0xe6, 0xd9, 0x45, 0x91, 0x91,
	0x7f, 0xc0, 0x97, 0x79, 0x56, 0x51, 0x55, 0x0b, 0x16, 0x00, 0x5e, 0x59, 0x11, 0xe1, 0x2b, 0xd8,
	0x5d, 0xd9, 0x44, 0x2e, 0x78, 0x25, 0x99, 0xde, 0x7b, 0xc2, 0x53, 0x86, 0x1b, 0xea, 0xc6, 0x78,
	0x26, 0xbb, 0xd0, 0x29, 0x65, 0x66, 0x3f, 0x85, 0x3e, 0x86, 0xaf, 0x61, 0x74, 0xc3, 0xb3, 0xbc,
	0x72, 0xee, 0x22, 0xe0, 0xcd, 0x78, 0xfa, 0x60, 0x3f, 0x22, 0x9e, 0xf5, 0x08, 0x73, 0x46, 0x53,
	0xeb, 0x25, 0x3f, 0xb6, 0x28, 0x7c, 0x0f, 0xdb, 0xf6, 0xee, 0x86, 0x96, 0x1d, 0xdb, 0x72, 0x1f,
	0xba, 0x8a, 0xdf, 0xb1, 0xca, 0xde, 0x35, 0xc0, 0x09, 0xe9, 0xac, 0x84, 0x5c, 0x60, 0x31, 0x5e,
	0x2b, 0xa7, 0x64, 0x02, 0x03, 0x6d, 0x54, 0xf4, 0x8e, 0x51, 0xb3, 0xc4, 0x9b, 0x8b, 0x86, 0x2f,
	0x60, 0xec, 0x4a, 0xfc, 0x46, 0xd0, 0xd3, 0x1d, 0x1c, 0xc1, 0xc1, 0x3b, 0xa6, 0xde, 0x14, 0x3c,
	0xb9, 0xbb, 0xc2, 0xc9, 0xac, 0x84, 0xf0, 0x0b, 0x1c, 0xae, 0x07, 0xfe, 0xa4, 0x30, 0x39, 0x01,
	0x2f, 0xa5, 0x8a, 0xe2, 0x98, 0xfa, 0x9d, 0x36, 0x2b, 0x61, 0x24, 0xfc, 0xb6, 0x05, 0xc3, 0x06,
	0x4b, 0xfe, 0x83, 0xb1, 0x5e, 0xee, 0x74, 0xa6, 0x39, 0xf4, 0xb0, 0x31, 0xf8, 0x48, 0xb3, 0x98,
	0xa8, 0x6d, 0x7c, 0x0a, 0x3b, 0x8d, 0xac, 0x39, 0x95, 0x73, 0xdb, 0x75, 0x7b, 0x99, 0x76, 0x45,
	0xe5, 0x7c, 0x2d, 0x0f, 0x2d, 0x6d, 0x1c, 0xbf, 0xca, 0xfb, 0xa8, 0x7d, 0x1d, 0xc1, 0x5f, 0x8d,
	0xbc, 0x94, 0x15, 0x2c, 0xa3, 0xca, 0xbd, 0xfa, 0xbd, 0x65, 0xee, 0x5b, 0x1b, 0x78, 0xf2, 0x8c,
	0xba, 0x4f, 0x9f, 0xd1, 0x4b, 0x08, 0x0a, 0x2a, 0xd5, 0x34, 0xd1, 0xeb, 0xaa, 0x64, 0x2d, 0x1b,
	0x23, 0xf5, 0x30, 0xfd, 0x40, 0xc7, 0x2f, 0x5d, 0xd8, 0xcd, 0x76, 0xfe, 0xb3, 0x0d, 0x9e, 0x7e,
	0xe8, 0xe4, 0x19, 0x0c, 0x9c, 0xa7, 0xc9, 0x6e, 0xb4, 0xf6, 0x17, 0x9c, 0xec, 0x45, 0xeb, 0x86,
	0x0f, 0x5b, 0xe4, 0x0c, 0xba, 0x68, 0x48, 0xb2, 0x1d, 0x35, 0x4d, 0x3d, 0x19, 0x47, 0x8f, 0x7c,
	0x1a, 0xb6, 0xc8, 0xff, 0xd0, 0x33, 0x56, 0x21, 0x18, 0x5b, 0xd9, 0x6e, 0xb2, 0x13, 0x3d, 0xf6,
	0x50, 0xd8, 0x22, 0x97, 0x30, 0x7e, 0x6c, 0x03, 0x72, 0x18, 0x6d, 0x34, 0xcc, 0xe4, 0x28, 0xda,
	0xec, 0x97, 0xb0, 0x35, 0xeb, 0xe1, 0x1f, 0xfd, 0xf9, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd0,
	0x26, 0xd6, 0x0b, 0xdf, 0x05, 0x00, 0x00,
}
