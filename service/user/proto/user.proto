syntax = "proto3";

service User {
	rpc Register(RegisterRequest) returns(RegisterResponse) {};
	rpc Login(LoginRequest) returns(LoginResponse) {};
	rpc GetBlockHeader(GetBlockHeaderRequest) returns(GetBlockHeaderResponse) {};
	rpc GetAccountInfo(GetAccountInfoRequest) returns(GetAccountInfoResponse) {};
	rpc Favorite(FavoriteRequest) returns(FavoriteResponse) {};
    rpc GetFavorite(GetFavoriteRequest) returns(GetFavoriteResponse) {};
	rpc Transfer(PushTxRequest) returns(PushTxResponse) {};
	rpc QueryMyBuy (QueryMyBuyRequest) returns (QueryMyBuyResponse) {};
}

message PushTxRequest {
	uint32 version = 1;
	uint32 cursor_num = 2;
	uint32 cursor_label = 3;
	uint64 lifetime = 4;
	string sender = 5;
	string contract = 6;
	string method = 7;
	string param = 8;
	uint32 sig_alg = 9;
	string signature =10;
}

message PushTxResponse {
	uint32 code = 1;
	string msg = 2;
}

message RegisterRequest {
	AccountInfo account = 1;
	UserInfo user = 2;
	string verify_id = 3;
	string verify_value = 4;
}

message AccountInfo {
    string name = 2;
	string pubkey = 3;
}

message UserInfo {
	 uint32 version = 1;
     uint32 cursor_num = 2;
     uint32 cursor_label = 3;
	 uint64 lifetime = 4;
	 string sender = 5;
     string contract = 6;
	 string method = 7;
	 string param = 8;
	 uint32 sig_alg = 9;
	 string signature =10;
}

message RegisterResponse {
	uint32 code = 1;
	string msg = 2;
}

message LoginRequest {
	string username = 1;
	string random = 2;
	string verify_id = 3;
	string verify_value = 4;
	string signture = 5;
}

message LoginResponse {
	uint32 code = 1;
	string msg = 2;
}


message GetBlockHeaderRequest{}
message GetBlockHeaderResponse {
	uint32 code = 1;
	BlockHeader data = 2;
	string msg = 3;
}

message BlockHeader {
	uint32 head_block_num = 1;
	string head_block_hash = 2;
	uint64 head_block_time = 3;
	string head_block_delegate = 4;
	uint32 cursor_label = 5;
	uint32 last_consensus_block_num = 6;
}

message GetAccountInfoRequest {
	string account_name = 1;
}

message GetAccountInfoResponse {
	uint32 code = 1;
	AccountInfoData data = 2;
	string msg = 3;
}

message AccountInfoData {
	string account_name = 1;
	string pubkey = 2;
	uint64 balance = 3;
	uint64 staked_balance = 4;
}

message FavoriteRequest {
    uint32 version = 1;
    uint32 cursor_num = 2;
    uint32 cursor_label = 3;
    uint64 lifetime = 4;
    string sender = 5;
    string contract = 6;
    string method = 7;
    string param = 8;
    uint32 sig_alg = 9;
    string signature =10;
}

message FavoriteResponse {
    uint32 code = 1;
    string data = 2;
    string msg = 3;
}

message GetFavoriteRequest {
	string username = 1;
    string goods_type = 2;
    uint32 page_size = 3;
    uint32 page_num = 4;
}

message GetFavoriteResponse {
	uint32 code = 1;
	FavoriteArr data = 2;
	string msg = 3;
}

message FavoriteArr {
    uint64 page_num = 1;
    uint64 row_count = 2;
    repeated FavoriteData row = 3;
}

message FavoriteData {
    string username = 1;
    string goods_id = 2;
    string goods_name = 3;
    uint64 price = 4;
    uint64 time = 5;
}

message GetBalanceRequest {
	string username = 1;
	string random = 2;
}
message GetBalanceResponse {
	uint32 code = 1;
	string data = 2;
	string msg = 3;
}

message QueryMyBuyRequest {
	int32 page_size = 1;
	int32 page_num = 2;
	string username = 3;
	string random = 4;
	string signature = 5;
}

message QueryMyBuyResponse {
	uint32 code = 1;
	BuyData data = 2;
	string msg = 3;
}

message BuyData {
	int32 page_num = 2;
	int32 row_count = 1;
	repeated Buy row = 3;
}

message Buy {
	string exchange_id = 1;
	string username = 2;
	string asset_id = 3;
	string asset_name = 4;
	uint64 asset_type = 5;
	string feature_tag = 6;
	uint64 price = 7;
	string sample_hash = 8;
	string storage_hash = 9;
	uint64 expiretime = 10;
	uint64 timestamp = 11;
}
