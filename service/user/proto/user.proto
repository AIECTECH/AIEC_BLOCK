syntax = "proto3";

service User {
	rpc Register(RegisterRequest) returns(RegisterResponse) {};
	rpc Login(LoginRequest) returns(LoginResponse) {};
	rpc Logout(LogoutRequest) returns(LogoutResponse) {};
	rpc GetBlockHeader(GetBlockHeaderRequest) returns(GetBlockHeaderResponse) {};
	rpc GetAccountInfo(GetAccountInfoRequest) returns(GetAccountInfoResponse) {};
}

message RegisterRequest {
	AccountInfo account = 1;
	UserInfo user = 2;
	string verify_id = 3;
	string verify_value = 4;
}

message AccountInfo {
    string name = 2;
	string pubkey = 3;
}

message UserInfo {
	 uint32 version = 1;
     uint32 cursor_num = 2;
     uint32 cursor_label = 3;
	 uint64 lifetime = 4;
	 string sender = 5;
     string contract = 6;
	 string method = 7;
	 string param = 8;
	 uint32 sig_alg = 9;
	 string signature =10;
}

message RegisterResponse {
	uint32 code = 1;
	string msg = 2;
}

message LoginRequest {
	string body = 1;
    string header = 2;
}

message LoginResponse {
	uint32 code = 1;
	string token = 2;
	string msg = 3;
}

message LogoutRequest {
	string username = 1;
	string token = 2;
}

message LogoutResponse {
	int32 code = 1;
	string msg = 2;
}

message GetBlockHeaderRequest{}
message GetBlockHeaderResponse {
	uint32 code = 1;
	BlockHeader data = 2;
	string msg = 3;
}

message BlockHeader {
	uint32 head_block_num = 1;
	string head_block_hash = 2;
	uint64 head_block_time = 3;
	string head_block_delegate = 4;
	uint32 cursor_label = 5;
	uint32 last_consensus_block_num = 6;
}

message GetAccountInfoRequest {
	string account_name = 1;
}

message GetAccountInfoResponse {
	uint32 code = 1;
	AccountInfoData data = 2;
	string msg = 3;
}

message AccountInfoData {
	string account_name = 1;
	string pubkey = 2;
	uint64 balance = 3;
	uint64 staked_balance = 4;
}