syntax = "proto3";

service Requirement {
	rpc Publish(PublishRequest) returns(PublishResponse) {};
    rpc Query(QueryRequest) returns(QueryResponse) {};
}

message PublishRequest {
    uint32 version = 1;
    uint32 cursor_num = 2;
    uint32 cursor_label = 3;
    uint64 lifetime = 4;
    string sender = 5;
    string contract = 6;
    string method = 7;
    string param = 8;
    uint32 sig_alg = 9;
    string signature =10;
}

//    string username = 1;
//    string requirement_name = 2;
//    string feature_tag = 3;
//    string sample_path = 4;
//    string sample_hash = 5;
//    string expire_time = 6;
//    string price = 7;
//    string description = 8;
//    string publish_date = 9;
//    string signature = 10;

message PublishResponse {
    uint32 code = 1;
    string data = 2;
    string msg = 3;
}

message QueryRequest {
    uint32 page_size = 1;
    uint32 page_num = 2;
    string req_id = 3;
    uint64 req_type = 4;
    string username = 5;
    string random = 6;
    string signature = 7;
}

message QueryResponse {
    int32 code = 1;
    QueryData data = 2;
    string msg = 3;
}

message QueryData {
    uint32 page_num = 1;
    uint32 row_count = 2;
    repeated RequirementData row = 3;
}

message RequirementData {
    string username = 1;
    string requirement_id = 2;
    string requirement_name = 3;
    uint64 req_type = 4;
    uint64 feature_tag = 5;
    string sample_hash = 7;
    uint64 expire_time = 8;
    uint64 price = 9;
    string description = 10;
    uint64 publish_date = 11;
}