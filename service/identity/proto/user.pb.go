// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

/*
Package user is a generated protocol buffer package.

It is generated from these files:
	user.proto

It has these top-level messages:
	RegisterRequest
	RegisterResponse
	LoginRequest
	LoginResponse
*/
package user

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RegisterRequest struct {
	Username  string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	UserType  uint64 `protobuf:"varint,2,opt,name=user_type,json=userType" json:"user_type,omitempty"`
	Personal  string `protobuf:"bytes,3,opt,name=personal" json:"personal,omitempty"`
	RoleType  uint64 `protobuf:"varint,4,opt,name=role_type,json=roleType" json:"role_type,omitempty"`
	Signature string `protobuf:"bytes,5,opt,name=signature" json:"signature,omitempty"`
	ActiveKey string `protobuf:"bytes,6,opt,name=active_key,json=activeKey" json:"active_key,omitempty"`
	OwnerKey  string `protobuf:"bytes,7,opt,name=owner_key,json=ownerKey" json:"owner_key,omitempty"`
}

func (m *RegisterRequest) Reset()                    { *m = RegisterRequest{} }
func (m *RegisterRequest) String() string            { return proto.CompactTextString(m) }
func (*RegisterRequest) ProtoMessage()               {}
func (*RegisterRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RegisterRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *RegisterRequest) GetUserType() uint64 {
	if m != nil {
		return m.UserType
	}
	return 0
}

func (m *RegisterRequest) GetPersonal() string {
	if m != nil {
		return m.Personal
	}
	return ""
}

func (m *RegisterRequest) GetRoleType() uint64 {
	if m != nil {
		return m.RoleType
	}
	return 0
}

func (m *RegisterRequest) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *RegisterRequest) GetActiveKey() string {
	if m != nil {
		return m.ActiveKey
	}
	return ""
}

func (m *RegisterRequest) GetOwnerKey() string {
	if m != nil {
		return m.OwnerKey
	}
	return ""
}

type RegisterResponse struct {
	Code uint32 `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
}

func (m *RegisterResponse) Reset()                    { *m = RegisterResponse{} }
func (m *RegisterResponse) String() string            { return proto.CompactTextString(m) }
func (*RegisterResponse) ProtoMessage()               {}
func (*RegisterResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RegisterResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *RegisterResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type LoginRequest struct {
	Username  string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Signature string `protobuf:"bytes,2,opt,name=signature" json:"signature,omitempty"`
}

func (m *LoginRequest) Reset()                    { *m = LoginRequest{} }
func (m *LoginRequest) String() string            { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()               {}
func (*LoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *LoginRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *LoginRequest) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type LoginResponse struct {
	Code  uint32 `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
	Msg   string `protobuf:"bytes,3,opt,name=msg" json:"msg,omitempty"`
}

func (m *LoginResponse) Reset()                    { *m = LoginResponse{} }
func (m *LoginResponse) String() string            { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()               {}
func (*LoginResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *LoginResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *LoginResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *LoginResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*RegisterRequest)(nil), "RegisterRequest")
	proto.RegisterType((*RegisterResponse)(nil), "RegisterResponse")
	proto.RegisterType((*LoginRequest)(nil), "LoginRequest")
	proto.RegisterType((*LoginResponse)(nil), "LoginResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for User service

type UserClient interface {
	Register(ctx context.Context, in *RegisterRequest, opts ...client.CallOption) (*RegisterResponse, error)
	Login(ctx context.Context, in *LoginRequest, opts ...client.CallOption) (*LoginResponse, error)
}

type userClient struct {
	c           client.Client
	serviceName string
}

func NewUserClient(serviceName string, c client.Client) UserClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "user"
	}
	return &userClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *userClient) Register(ctx context.Context, in *RegisterRequest, opts ...client.CallOption) (*RegisterResponse, error) {
	req := c.c.NewRequest(c.serviceName, "User.Register", in)
	out := new(RegisterResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) Login(ctx context.Context, in *LoginRequest, opts ...client.CallOption) (*LoginResponse, error) {
	req := c.c.NewRequest(c.serviceName, "User.Login", in)
	out := new(LoginResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for User service

type UserHandler interface {
	Register(context.Context, *RegisterRequest, *RegisterResponse) error
	Login(context.Context, *LoginRequest, *LoginResponse) error
}

func RegisterUserHandler(s server.Server, hdlr UserHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&User{hdlr}, opts...))
}

type User struct {
	UserHandler
}

func (h *User) Register(ctx context.Context, in *RegisterRequest, out *RegisterResponse) error {
	return h.UserHandler.Register(ctx, in, out)
}

func (h *User) Login(ctx context.Context, in *LoginRequest, out *LoginResponse) error {
	return h.UserHandler.Login(ctx, in, out)
}

func init() { proto.RegisterFile("user.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 301 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xc1, 0x4e, 0xbc, 0x30,
	0x10, 0xc6, 0x97, 0x05, 0xf6, 0xbf, 0x4c, 0xfe, 0x28, 0x36, 0x1e, 0x08, 0x6a, 0xb2, 0xe9, 0x89,
	0x13, 0x89, 0x7a, 0xf1, 0x11, 0x4c, 0xf0, 0x44, 0xf4, 0xbc, 0x41, 0x9c, 0x10, 0xb2, 0xbb, 0x2d,
	0xb6, 0x45, 0xd3, 0x87, 0xf5, 0x5d, 0x4c, 0xdb, 0x65, 0xd7, 0xe5, 0x60, 0xbc, 0xcd, 0x7c, 0xc3,
	0x6f, 0xf8, 0xbe, 0xb6, 0x00, 0x83, 0x44, 0x51, 0xf4, 0x82, 0x2b, 0x4e, 0xbf, 0x3c, 0x38, 0xaf,
	0xb0, 0xed, 0xa4, 0x42, 0x51, 0xe1, 0xfb, 0x80, 0x52, 0x91, 0x0c, 0x96, 0xe6, 0x0b, 0x56, 0xef,
	0x30, 0xf5, 0x56, 0x5e, 0x1e, 0x55, 0x87, 0x9e, 0x5c, 0x41, 0x64, 0xea, 0xb5, 0xd2, 0x3d, 0xa6,
	0xf3, 0x95, 0x97, 0x07, 0x6e, 0xf8, 0xac, 0x7b, 0x34, 0x60, 0x8f, 0x42, 0x72, 0x56, 0x6f, 0x53,
	0xdf, 0x81, 0x63, 0x6f, 0x40, 0xc1, 0xb7, 0xe8, 0xc0, 0xc0, 0x81, 0x46, 0xb0, 0xe0, 0x35, 0x44,
	0xb2, 0x6b, 0x59, 0xad, 0x06, 0x81, 0x69, 0x68, 0xc9, 0xa3, 0x40, 0x6e, 0x00, 0xea, 0x46, 0x75,
	0x1f, 0xb8, 0xde, 0xa0, 0x4e, 0x17, 0x6e, 0xec, 0x94, 0x12, 0xb5, 0xd9, 0xcc, 0x3f, 0x19, 0x0a,
	0x3b, 0xfd, 0xe7, 0x7e, 0x6b, 0x85, 0x12, 0x35, 0x7d, 0x80, 0xe4, 0x18, 0x4f, 0xf6, 0x9c, 0x49,
	0x24, 0x04, 0x82, 0x86, 0xbf, 0xb9, 0x6c, 0x71, 0x65, 0x6b, 0x92, 0x80, 0xbf, 0x93, 0xad, 0x4d,
	0x14, 0x55, 0xa6, 0xa4, 0x8f, 0xf0, 0xff, 0x89, 0xb7, 0x1d, 0xfb, 0xcb, 0xa9, 0x9c, 0xf8, 0x9f,
	0x4f, 0xfc, 0xd3, 0x12, 0xe2, 0xfd, 0xa6, 0x5f, 0x0c, 0x5c, 0x42, 0xa8, 0xf8, 0x06, 0xd9, 0x1e,
	0x77, 0xcd, 0x68, 0xcb, 0x3f, 0xd8, 0xba, 0x6b, 0x20, 0x78, 0x91, 0x28, 0xc8, 0x2d, 0x2c, 0xc7,
	0x60, 0x24, 0x29, 0x26, 0x57, 0x98, 0x5d, 0x14, 0xd3, 0xd4, 0x74, 0x46, 0x72, 0x08, 0xad, 0x0f,
	0x12, 0x17, 0x3f, 0x93, 0x65, 0x67, 0xc5, 0x89, 0x3d, 0x3a, 0x7b, 0x5d, 0xd8, 0xc7, 0x71, 0xff,
	0x1d, 0x00, 0x00, 0xff, 0xff, 0xd2, 0xe2, 0x34, 0xc3, 0x2a, 0x02, 0x00, 0x00,
}
