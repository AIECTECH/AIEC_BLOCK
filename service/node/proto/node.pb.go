// Code generated by protoc-gen-go. DO NOT EDIT.
// source: node.proto

/*
Package node is a generated protocol buffer package.

It is generated from these files:
	node.proto

It has these top-level messages:
	NodeInfoReq
	NodeBaseInfo
	RegisterRequest
	NodeTrxUUIDIP
	NodeClusterInfoRequest
	NODEClusterInfo
	SignInfo
	RegisterResponse
*/
package node

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NodeInfoReq struct {
	NodeId string        `protobuf:"bytes,1,opt,name=nodeId" json:"nodeId,omitempty"`
	Info   *NodeBaseInfo `protobuf:"bytes,2,opt,name=info" json:"info,omitempty"`
}

func (m *NodeInfoReq) Reset()                    { *m = NodeInfoReq{} }
func (m *NodeInfoReq) String() string            { return proto.CompactTextString(m) }
func (*NodeInfoReq) ProtoMessage()               {}
func (*NodeInfoReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *NodeInfoReq) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *NodeInfoReq) GetInfo() *NodeBaseInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type NodeBaseInfo struct {
	NodeIp          string `protobuf:"bytes,1,opt,name=nodeIp" json:"nodeIp,omitempty"`
	NodePort        string `protobuf:"bytes,2,opt,name=nodePort" json:"nodePort,omitempty"`
	City            string `protobuf:"bytes,3,opt,name=city" json:"city,omitempty"`
	OsSystem        string `protobuf:"bytes,4,opt,name=osSystem" json:"osSystem,omitempty"`
	ServiceProvider string `protobuf:"bytes,5,opt,name=serviceProvider" json:"serviceProvider,omitempty"`
	Longitude       string `protobuf:"bytes,6,opt,name=longitude" json:"longitude,omitempty"`
	Latitude        string `protobuf:"bytes,7,opt,name=latitude" json:"latitude,omitempty"`
}

func (m *NodeBaseInfo) Reset()                    { *m = NodeBaseInfo{} }
func (m *NodeBaseInfo) String() string            { return proto.CompactTextString(m) }
func (*NodeBaseInfo) ProtoMessage()               {}
func (*NodeBaseInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *NodeBaseInfo) GetNodeIp() string {
	if m != nil {
		return m.NodeIp
	}
	return ""
}

func (m *NodeBaseInfo) GetNodePort() string {
	if m != nil {
		return m.NodePort
	}
	return ""
}

func (m *NodeBaseInfo) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *NodeBaseInfo) GetOsSystem() string {
	if m != nil {
		return m.OsSystem
	}
	return ""
}

func (m *NodeBaseInfo) GetServiceProvider() string {
	if m != nil {
		return m.ServiceProvider
	}
	return ""
}

func (m *NodeBaseInfo) GetLongitude() string {
	if m != nil {
		return m.Longitude
	}
	return ""
}

func (m *NodeBaseInfo) GetLatitude() string {
	if m != nil {
		return m.Latitude
	}
	return ""
}

type RegisterRequest struct {
	NodeUUIDInfo *NodeTrxUUIDIP `protobuf:"bytes,1,opt,name=NodeUUIDInfo" json:"NodeUUIDInfo,omitempty"`
	SignInfo     *SignInfo      `protobuf:"bytes,2,opt,name=SignInfo" json:"SignInfo,omitempty"`
}

func (m *RegisterRequest) Reset()                    { *m = RegisterRequest{} }
func (m *RegisterRequest) String() string            { return proto.CompactTextString(m) }
func (*RegisterRequest) ProtoMessage()               {}
func (*RegisterRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *RegisterRequest) GetNodeUUIDInfo() *NodeTrxUUIDIP {
	if m != nil {
		return m.NodeUUIDInfo
	}
	return nil
}

func (m *RegisterRequest) GetSignInfo() *SignInfo {
	if m != nil {
		return m.SignInfo
	}
	return nil
}

type NodeTrxUUIDIP struct {
	UserName string `protobuf:"bytes,1,opt,name=UserName" json:"UserName,omitempty"`
	PubKey   string `protobuf:"bytes,2,opt,name=PubKey" json:"PubKey,omitempty"`
}

func (m *NodeTrxUUIDIP) Reset()                    { *m = NodeTrxUUIDIP{} }
func (m *NodeTrxUUIDIP) String() string            { return proto.CompactTextString(m) }
func (*NodeTrxUUIDIP) ProtoMessage()               {}
func (*NodeTrxUUIDIP) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *NodeTrxUUIDIP) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *NodeTrxUUIDIP) GetPubKey() string {
	if m != nil {
		return m.PubKey
	}
	return ""
}

type NodeClusterInfoRequest struct {
	NodeClusterInfo *NODEClusterInfo `protobuf:"bytes,1,opt,name=NodeClusterInfo" json:"NodeClusterInfo,omitempty"`
	SignInfo        *SignInfo        `protobuf:"bytes,2,opt,name=signInfo" json:"signInfo,omitempty"`
}

func (m *NodeClusterInfoRequest) Reset()                    { *m = NodeClusterInfoRequest{} }
func (m *NodeClusterInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*NodeClusterInfoRequest) ProtoMessage()               {}
func (*NodeClusterInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *NodeClusterInfoRequest) GetNodeClusterInfo() *NODEClusterInfo {
	if m != nil {
		return m.NodeClusterInfo
	}
	return nil
}

func (m *NodeClusterInfoRequest) GetSignInfo() *SignInfo {
	if m != nil {
		return m.SignInfo
	}
	return nil
}

type NODEClusterInfo struct {
	NodeId      []byte   `protobuf:"bytes,1,opt,name=NodeId,proto3" json:"NodeId,omitempty"`
	NodeIp      string   `protobuf:"bytes,2,opt,name=NodeIp" json:"NodeIp,omitempty"`
	NodePort    string   `protobuf:"bytes,3,opt,name=NodePort" json:"NodePort,omitempty"`
	NodeAddress string   `protobuf:"bytes,4,opt,name=NodeAddress" json:"NodeAddress,omitempty"`
	SeedIP      string   `protobuf:"bytes,6,opt,name=SeedIP" json:"SeedIP,omitempty"`
	SlaveIP     []string `protobuf:"bytes,7,rep,name=SlaveIP" json:"SlaveIP,omitempty"`
}

func (m *NODEClusterInfo) Reset()                    { *m = NODEClusterInfo{} }
func (m *NODEClusterInfo) String() string            { return proto.CompactTextString(m) }
func (*NODEClusterInfo) ProtoMessage()               {}
func (*NODEClusterInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *NODEClusterInfo) GetNodeId() []byte {
	if m != nil {
		return m.NodeId
	}
	return nil
}

func (m *NODEClusterInfo) GetNodeIp() string {
	if m != nil {
		return m.NodeIp
	}
	return ""
}

func (m *NODEClusterInfo) GetNodePort() string {
	if m != nil {
		return m.NodePort
	}
	return ""
}

func (m *NODEClusterInfo) GetNodeAddress() string {
	if m != nil {
		return m.NodeAddress
	}
	return ""
}

func (m *NODEClusterInfo) GetSeedIP() string {
	if m != nil {
		return m.SeedIP
	}
	return ""
}

func (m *NODEClusterInfo) GetSlaveIP() []string {
	if m != nil {
		return m.SlaveIP
	}
	return nil
}

type SignInfo struct {
	Version     uint32 `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	CursorNum   uint32 `protobuf:"varint,2,opt,name=cursor_num,json=cursorNum" json:"cursor_num,omitempty"`
	CursorLabel uint32 `protobuf:"varint,3,opt,name=cursor_label,json=cursorLabel" json:"cursor_label,omitempty"`
	Lifetime    uint64 `protobuf:"varint,4,opt,name=lifetime" json:"lifetime,omitempty"`
	Sender      string `protobuf:"bytes,5,opt,name=sender" json:"sender,omitempty"`
	Contract    string `protobuf:"bytes,6,opt,name=contract" json:"contract,omitempty"`
	Method      string `protobuf:"bytes,7,opt,name=method" json:"method,omitempty"`
	Param       string `protobuf:"bytes,8,opt,name=param" json:"param,omitempty"`
	SigAlg      uint32 `protobuf:"varint,9,opt,name=sig_alg,json=sigAlg" json:"sig_alg,omitempty"`
	Signature   string `protobuf:"bytes,10,opt,name=signature" json:"signature,omitempty"`
}

func (m *SignInfo) Reset()                    { *m = SignInfo{} }
func (m *SignInfo) String() string            { return proto.CompactTextString(m) }
func (*SignInfo) ProtoMessage()               {}
func (*SignInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *SignInfo) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *SignInfo) GetCursorNum() uint32 {
	if m != nil {
		return m.CursorNum
	}
	return 0
}

func (m *SignInfo) GetCursorLabel() uint32 {
	if m != nil {
		return m.CursorLabel
	}
	return 0
}

func (m *SignInfo) GetLifetime() uint64 {
	if m != nil {
		return m.Lifetime
	}
	return 0
}

func (m *SignInfo) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *SignInfo) GetContract() string {
	if m != nil {
		return m.Contract
	}
	return ""
}

func (m *SignInfo) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *SignInfo) GetParam() string {
	if m != nil {
		return m.Param
	}
	return ""
}

func (m *SignInfo) GetSigAlg() uint32 {
	if m != nil {
		return m.SigAlg
	}
	return 0
}

func (m *SignInfo) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type RegisterResponse struct {
	Code uint32 `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
}

func (m *RegisterResponse) Reset()                    { *m = RegisterResponse{} }
func (m *RegisterResponse) String() string            { return proto.CompactTextString(m) }
func (*RegisterResponse) ProtoMessage()               {}
func (*RegisterResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *RegisterResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *RegisterResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*NodeInfoReq)(nil), "NodeInfoReq")
	proto.RegisterType((*NodeBaseInfo)(nil), "NodeBaseInfo")
	proto.RegisterType((*RegisterRequest)(nil), "RegisterRequest")
	proto.RegisterType((*NodeTrxUUIDIP)(nil), "NodeTrxUUIDIP")
	proto.RegisterType((*NodeClusterInfoRequest)(nil), "NodeClusterInfoRequest")
	proto.RegisterType((*NODEClusterInfo)(nil), "NODEClusterInfo")
	proto.RegisterType((*SignInfo)(nil), "SignInfo")
	proto.RegisterType((*RegisterResponse)(nil), "RegisterResponse")
}

func init() { proto.RegisterFile("node.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 590 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x54, 0x51, 0x6f, 0xd3, 0x30,
	0x10, 0xa6, 0x5b, 0xd7, 0x36, 0xd7, 0x95, 0x16, 0x0b, 0x8d, 0x68, 0x02, 0xa9, 0x8b, 0x84, 0xd4,
	0xa7, 0x48, 0x94, 0x17, 0xe0, 0x6d, 0x6c, 0x48, 0x44, 0xa0, 0x10, 0xb9, 0xec, 0x79, 0xca, 0x9a,
	0x5b, 0xb0, 0x94, 0xc4, 0x99, 0xed, 0x54, 0x4c, 0xfc, 0x14, 0x7e, 0x05, 0x7f, 0x86, 0xdf, 0x83,
	0xec, 0x38, 0x49, 0x1b, 0x89, 0x37, 0x7f, 0xdf, 0x9d, 0x2f, 0xdf, 0x9d, 0xbf, 0x0b, 0x40, 0xc1,
	0x13, 0xf4, 0x4b, 0xc1, 0x15, 0xf7, 0x3e, 0xc3, 0x34, 0xe4, 0x09, 0x06, 0xc5, 0x3d, 0xa7, 0xf8,
	0x40, 0xce, 0x60, 0xa4, 0x83, 0x41, 0xe2, 0x0e, 0x96, 0x83, 0x95, 0x43, 0x2d, 0x22, 0x17, 0x30,
	0x64, 0xc5, 0x3d, 0x77, 0x8f, 0x96, 0x83, 0xd5, 0x74, 0x3d, 0xf3, 0xf5, 0x9d, 0x8f, 0xb1, 0xac,
	0xef, 0x99, 0x90, 0xf7, 0x77, 0x00, 0xa7, 0xfb, 0x74, 0x5b, 0xab, 0x3c, 0xa8, 0x55, 0x92, 0x73,
	0x98, 0xe8, 0x53, 0xc4, 0x85, 0x32, 0xf5, 0x1c, 0xda, 0x62, 0x42, 0x60, 0xb8, 0x65, 0xea, 0xd1,
	0x3d, 0x36, 0xbc, 0x39, 0xeb, 0x7c, 0x2e, 0x37, 0x8f, 0x52, 0x61, 0xee, 0x0e, 0xeb, 0xfc, 0x06,
	0x93, 0x15, 0xcc, 0x25, 0x8a, 0x1d, 0xdb, 0x62, 0x24, 0xf8, 0x8e, 0x25, 0x28, 0xdc, 0x13, 0x93,
	0xd2, 0xa7, 0xc9, 0x4b, 0x70, 0x32, 0x5e, 0xa4, 0x4c, 0x55, 0x09, 0xba, 0x23, 0x93, 0xd3, 0x11,
	0xfa, 0x1b, 0x59, 0xac, 0xea, 0xe0, 0xb8, 0xfe, 0x46, 0x83, 0xbd, 0x0c, 0xe6, 0x14, 0x53, 0x26,
	0x15, 0x0a, 0x8a, 0x0f, 0x15, 0x4a, 0x45, 0xd6, 0x75, 0xab, 0x37, 0x37, 0xc1, 0xb5, 0x6e, 0xd5,
	0x34, 0x38, 0x5d, 0x3f, 0x35, 0x63, 0xf9, 0x2e, 0x7e, 0x1a, 0x3e, 0xa2, 0x07, 0x39, 0xe4, 0x35,
	0x4c, 0x36, 0x2c, 0x2d, 0x82, 0x6e, 0x8c, 0x8e, 0xdf, 0x10, 0xb4, 0x0d, 0x79, 0x57, 0x30, 0x3b,
	0xa8, 0xa2, 0xa5, 0xdd, 0x48, 0x14, 0x61, 0x9c, 0xa3, 0x1d, 0x64, 0x8b, 0xf5, 0x88, 0xa3, 0xea,
	0xee, 0x0b, 0x3e, 0xda, 0x41, 0x5a, 0xe4, 0xfd, 0x82, 0x33, 0x5d, 0xe4, 0x2a, 0xab, 0xb4, 0x6a,
	0xfb, 0xb8, 0x46, 0xf9, 0x07, 0x98, 0xf7, 0x22, 0x56, 0xfc, 0xc2, 0x0f, 0xbf, 0x5d, 0x7f, 0xda,
	0xbf, 0xd1, 0x4f, 0xd4, 0x1d, 0xc8, 0xff, 0x77, 0xd0, 0x84, 0xbc, 0x3f, 0x03, 0x98, 0xf7, 0x6a,
	0x69, 0xa1, 0x61, 0xe7, 0xab, 0x53, 0x6a, 0x51, 0xcb, 0x97, 0x4d, 0x03, 0x61, 0xeb, 0x91, 0xb0,
	0xf1, 0x48, 0xed, 0x85, 0x16, 0x93, 0x65, 0x6d, 0xd9, 0xcb, 0x24, 0x11, 0x28, 0xa5, 0xb5, 0xc4,
	0x3e, 0xa5, 0xab, 0x6e, 0x10, 0x93, 0x20, 0xb2, 0x0f, 0x6d, 0x11, 0x71, 0x61, 0xbc, 0xc9, 0xe2,
	0x1d, 0x06, 0x91, 0x3b, 0x5e, 0x1e, 0xaf, 0x1c, 0xda, 0x40, 0xef, 0xf7, 0x51, 0xf7, 0x3a, 0x3a,
	0x6d, 0x87, 0x42, 0x32, 0x5e, 0x18, 0xb5, 0x33, 0xda, 0x40, 0xf2, 0x0a, 0x60, 0x5b, 0x09, 0xc9,
	0xc5, 0x6d, 0x51, 0xe5, 0x46, 0xf2, 0x8c, 0x3a, 0x35, 0x13, 0x56, 0x39, 0xb9, 0x80, 0x53, 0x1b,
	0xce, 0xe2, 0x3b, 0xcc, 0x8c, 0xf2, 0x19, 0x9d, 0xd6, 0xdc, 0x57, 0x4d, 0x19, 0xa3, 0xb1, 0x7b,
	0x54, 0x2c, 0x47, 0xa3, 0x7c, 0x48, 0x5b, 0xac, 0x65, 0x4b, 0x2c, 0x3a, 0x0f, 0x5b, 0xa4, 0xef,
	0x6c, 0x79, 0xa1, 0x44, 0xbc, 0x55, 0xb6, 0xa1, 0x16, 0xeb, 0x3b, 0x39, 0xaa, 0x1f, 0x3c, 0xb1,
	0xb6, 0xb5, 0x88, 0x3c, 0x87, 0x93, 0x32, 0x16, 0x71, 0xee, 0x4e, 0x0c, 0x5d, 0x03, 0xf2, 0x02,
	0xc6, 0x92, 0xa5, 0xb7, 0x71, 0x96, 0xba, 0x8e, 0xd1, 0x36, 0x92, 0x2c, 0xbd, 0xcc, 0x52, 0xbd,
	0x1d, 0xfa, 0xfd, 0x62, 0x55, 0x09, 0x74, 0xa1, 0xde, 0x8e, 0x96, 0xf0, 0xde, 0xc1, 0xa2, 0xdb,
	0x00, 0x59, 0xf2, 0x42, 0xa2, 0xd9, 0x54, 0x9e, 0xa0, 0x9d, 0x90, 0x39, 0x93, 0x05, 0x1c, 0xe7,
	0x32, 0xb5, 0x4f, 0xa9, 0x8f, 0xeb, 0xf7, 0x30, 0xd4, 0x66, 0x25, 0x6f, 0x60, 0xd2, 0x54, 0x20,
	0x0b, 0xbf, 0xb7, 0x4e, 0xe7, 0xcf, 0xfc, 0x7e, 0x79, 0xef, 0xc9, 0xdd, 0xc8, 0xfc, 0xa0, 0xde,
	0xfe, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x8f, 0x1e, 0xf8, 0x73, 0xae, 0x04, 0x00, 0x00,
}
