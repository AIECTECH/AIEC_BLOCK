// Code generated by protoc-gen-go. DO NOT EDIT.
// source: asset.proto

/*
Package asset is a generated protocol buffer package.

It is generated from these files:
	asset.proto

It has these top-level messages:
	GetFileUploadURLRequest
	GetFileUploadURLResponse
	RegisterFileRequest
	RegisterFileResponse
	QueryUploadedDataRequest
	QueryUploadedDataResponse
	QueryUploadedData
	QueryUploadedRow
	RegisterRequest
	RegisterResponse
	QueryRequest
	QueryResponse
	QueryData
	QueryRow
	QueryAllAssetRequest
	QueryPara
	QueryAllAssetResponse
	ModifyRequest
	ModifyResponse
	GetFileUploadStatRequest
	GetFileUploadStatResponse
	GetDownLoadURLRequest
	GetDownLoadURLResponse
	QueryByIDRequest
	GetUserPurchaseAssetListRequest
	GetUserPurchaseAssetListResponse
	QueryPurchaseData
	QueryPurchaseRow
*/
package asset

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetFileUploadURLRequest struct {
	//    string username = 1;
	//    int64 fileSize = 2;
	//    string fileName = 3;
	//    int32 filePolicy = 4;
	//    int32 fileNumber = 5;
	//    string fileash = 6;
	//    string signature = 7;
	PostBody string `protobuf:"bytes,1,opt,name=postBody" json:"postBody,omitempty"`
}

func (m *GetFileUploadURLRequest) Reset()                    { *m = GetFileUploadURLRequest{} }
func (m *GetFileUploadURLRequest) String() string            { return proto.CompactTextString(m) }
func (*GetFileUploadURLRequest) ProtoMessage()               {}
func (*GetFileUploadURLRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetFileUploadURLRequest) GetPostBody() string {
	if m != nil {
		return m.PostBody
	}
	return ""
}

type GetFileUploadURLResponse struct {
	Code uint32 `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
	Data string `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *GetFileUploadURLResponse) Reset()                    { *m = GetFileUploadURLResponse{} }
func (m *GetFileUploadURLResponse) String() string            { return proto.CompactTextString(m) }
func (*GetFileUploadURLResponse) ProtoMessage()               {}
func (*GetFileUploadURLResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetFileUploadURLResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetFileUploadURLResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *GetFileUploadURLResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type RegisterFileRequest struct {
	PostBody string `protobuf:"bytes,1,opt,name=postBody" json:"postBody,omitempty"`
}

func (m *RegisterFileRequest) Reset()                    { *m = RegisterFileRequest{} }
func (m *RegisterFileRequest) String() string            { return proto.CompactTextString(m) }
func (*RegisterFileRequest) ProtoMessage()               {}
func (*RegisterFileRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *RegisterFileRequest) GetPostBody() string {
	if m != nil {
		return m.PostBody
	}
	return ""
}

type RegisterFileResponse struct {
	Code uint32 `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
	Data string `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *RegisterFileResponse) Reset()                    { *m = RegisterFileResponse{} }
func (m *RegisterFileResponse) String() string            { return proto.CompactTextString(m) }
func (*RegisterFileResponse) ProtoMessage()               {}
func (*RegisterFileResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *RegisterFileResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *RegisterFileResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *RegisterFileResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type QueryUploadedDataRequest struct {
	PageSize int32  `protobuf:"varint,1,opt,name=pageSize" json:"pageSize,omitempty"`
	PageNum  int32  `protobuf:"varint,2,opt,name=pageNum" json:"pageNum,omitempty"`
	Username string `protobuf:"bytes,3,opt,name=username" json:"username,omitempty"`
}

func (m *QueryUploadedDataRequest) Reset()                    { *m = QueryUploadedDataRequest{} }
func (m *QueryUploadedDataRequest) String() string            { return proto.CompactTextString(m) }
func (*QueryUploadedDataRequest) ProtoMessage()               {}
func (*QueryUploadedDataRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *QueryUploadedDataRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *QueryUploadedDataRequest) GetPageNum() int32 {
	if m != nil {
		return m.PageNum
	}
	return 0
}

func (m *QueryUploadedDataRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type QueryUploadedDataResponse struct {
	Code int32              `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Data *QueryUploadedData `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	Msg  string             `protobuf:"bytes,3,opt,name=msg" json:"msg,omitempty"`
}

func (m *QueryUploadedDataResponse) Reset()                    { *m = QueryUploadedDataResponse{} }
func (m *QueryUploadedDataResponse) String() string            { return proto.CompactTextString(m) }
func (*QueryUploadedDataResponse) ProtoMessage()               {}
func (*QueryUploadedDataResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *QueryUploadedDataResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *QueryUploadedDataResponse) GetData() *QueryUploadedData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *QueryUploadedDataResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type QueryUploadedData struct {
	PageNum  uint64              `protobuf:"varint,1,opt,name=pageNum" json:"pageNum,omitempty"`
	RowCount uint64              `protobuf:"varint,2,opt,name=rowCount" json:"rowCount,omitempty"`
	Row      []*QueryUploadedRow `protobuf:"bytes,3,rep,name=row" json:"row,omitempty"`
}

func (m *QueryUploadedData) Reset()                    { *m = QueryUploadedData{} }
func (m *QueryUploadedData) String() string            { return proto.CompactTextString(m) }
func (*QueryUploadedData) ProtoMessage()               {}
func (*QueryUploadedData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *QueryUploadedData) GetPageNum() uint64 {
	if m != nil {
		return m.PageNum
	}
	return 0
}

func (m *QueryUploadedData) GetRowCount() uint64 {
	if m != nil {
		return m.RowCount
	}
	return 0
}

func (m *QueryUploadedData) GetRow() []*QueryUploadedRow {
	if m != nil {
		return m.Row
	}
	return nil
}

type QueryUploadedRow struct {
	Username   string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	FileName   string `protobuf:"bytes,2,opt,name=file_name,json=fileName" json:"file_name,omitempty"`
	FileSize   uint64 `protobuf:"varint,3,opt,name=file_size,json=fileSize" json:"file_size,omitempty"`
	FilePolicy string `protobuf:"bytes,4,opt,name=file_policy,json=filePolicy" json:"file_policy,omitempty"`
	FileNumber uint64 `protobuf:"varint,5,opt,name=file_number,json=fileNumber" json:"file_number,omitempty"`
	AuthPath   string `protobuf:"bytes,6,opt,name=auth_path,json=authPath" json:"auth_path,omitempty"`
}

func (m *QueryUploadedRow) Reset()                    { *m = QueryUploadedRow{} }
func (m *QueryUploadedRow) String() string            { return proto.CompactTextString(m) }
func (*QueryUploadedRow) ProtoMessage()               {}
func (*QueryUploadedRow) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *QueryUploadedRow) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *QueryUploadedRow) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *QueryUploadedRow) GetFileSize() uint64 {
	if m != nil {
		return m.FileSize
	}
	return 0
}

func (m *QueryUploadedRow) GetFilePolicy() string {
	if m != nil {
		return m.FilePolicy
	}
	return ""
}

func (m *QueryUploadedRow) GetFileNumber() uint64 {
	if m != nil {
		return m.FileNumber
	}
	return 0
}

func (m *QueryUploadedRow) GetAuthPath() string {
	if m != nil {
		return m.AuthPath
	}
	return ""
}

type RegisterRequest struct {
	// string username = 1;
	// string asset_id = 2;
	// string session_id = 3;
	// string asset_name = 4;
	// int32 feature_tag = 5;
	// string asset_sample_path = 6;
	// string asset_sample_hash = 7;
	// string asset_storage_path = 8;
	// string asset_storage_hash = 9;
	// string expire_time = 10;
	// int64 price = 11;
	// string description = 12;
	// string upload_date = 13;
	// string signature = 14;
	PostBody string `protobuf:"bytes,1,opt,name=postBody" json:"postBody,omitempty"`
}

func (m *RegisterRequest) Reset()                    { *m = RegisterRequest{} }
func (m *RegisterRequest) String() string            { return proto.CompactTextString(m) }
func (*RegisterRequest) ProtoMessage()               {}
func (*RegisterRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *RegisterRequest) GetPostBody() string {
	if m != nil {
		return m.PostBody
	}
	return ""
}

type RegisterResponse struct {
	Code uint32 `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
	Data string `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *RegisterResponse) Reset()                    { *m = RegisterResponse{} }
func (m *RegisterResponse) String() string            { return proto.CompactTextString(m) }
func (*RegisterResponse) ProtoMessage()               {}
func (*RegisterResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *RegisterResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *RegisterResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *RegisterResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type QueryRequest struct {
	PageSize   int32  `protobuf:"varint,1,opt,name=pageSize" json:"pageSize,omitempty"`
	PageNum    int32  `protobuf:"varint,2,opt,name=pageNum" json:"pageNum,omitempty"`
	Username   string `protobuf:"bytes,3,opt,name=username" json:"username,omitempty"`
	FeatureTag uint64 `protobuf:"varint,4,opt,name=featureTag" json:"featureTag,omitempty"`
}

func (m *QueryRequest) Reset()                    { *m = QueryRequest{} }
func (m *QueryRequest) String() string            { return proto.CompactTextString(m) }
func (*QueryRequest) ProtoMessage()               {}
func (*QueryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *QueryRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *QueryRequest) GetPageNum() int32 {
	if m != nil {
		return m.PageNum
	}
	return 0
}

func (m *QueryRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *QueryRequest) GetFeatureTag() uint64 {
	if m != nil {
		return m.FeatureTag
	}
	return 0
}

type QueryResponse struct {
	Code int32      `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Data *QueryData `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	Msg  string     `protobuf:"bytes,3,opt,name=msg" json:"msg,omitempty"`
}

func (m *QueryResponse) Reset()                    { *m = QueryResponse{} }
func (m *QueryResponse) String() string            { return proto.CompactTextString(m) }
func (*QueryResponse) ProtoMessage()               {}
func (*QueryResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *QueryResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *QueryResponse) GetData() *QueryData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *QueryResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type QueryData struct {
	PageNum  uint64      `protobuf:"varint,1,opt,name=pageNum" json:"pageNum,omitempty"`
	RowCount uint64      `protobuf:"varint,2,opt,name=rowCount" json:"rowCount,omitempty"`
	Row      []*QueryRow `protobuf:"bytes,3,rep,name=row" json:"row,omitempty"`
}

func (m *QueryData) Reset()                    { *m = QueryData{} }
func (m *QueryData) String() string            { return proto.CompactTextString(m) }
func (*QueryData) ProtoMessage()               {}
func (*QueryData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *QueryData) GetPageNum() uint64 {
	if m != nil {
		return m.PageNum
	}
	return 0
}

func (m *QueryData) GetRowCount() uint64 {
	if m != nil {
		return m.RowCount
	}
	return 0
}

func (m *QueryData) GetRow() []*QueryRow {
	if m != nil {
		return m.Row
	}
	return nil
}

type QueryRow struct {
	AssetId     string `protobuf:"bytes,1,opt,name=asset_id,json=assetId" json:"asset_id,omitempty"`
	Username    string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	AssetName   string `protobuf:"bytes,3,opt,name=asset_name,json=assetName" json:"asset_name,omitempty"`
	AssetType   string `protobuf:"bytes,4,opt,name=asset_type,json=assetType" json:"asset_type,omitempty"`
	FeatureTag1 string `protobuf:"bytes,5,opt,name=feature_tag1,json=featureTag1" json:"feature_tag1,omitempty"`
	FeatureTag2 string `protobuf:"bytes,6,opt,name=feature_tag2,json=featureTag2" json:"feature_tag2,omitempty"`
	FeatureTag3 string `protobuf:"bytes,7,opt,name=feature_tag3,json=featureTag3" json:"feature_tag3,omitempty"`
	SamplePath  string `protobuf:"bytes,8,opt,name=sample_path,json=samplePath" json:"sample_path,omitempty"`
	SampleHash  string `protobuf:"bytes,9,opt,name=sample_hash,json=sampleHash" json:"sample_hash,omitempty"`
	StoragePath string `protobuf:"bytes,10,opt,name=storage_path,json=storagePath" json:"storage_path,omitempty"`
	StorageHash string `protobuf:"bytes,11,opt,name=storage_hash,json=storageHash" json:"storage_hash,omitempty"`
	ExpireTime  uint32 `protobuf:"varint,12,opt,name=expire_time,json=expireTime" json:"expire_time,omitempty"`
	Price       uint64 `protobuf:"varint,13,opt,name=price" json:"price,omitempty"`
	Description string `protobuf:"bytes,14,opt,name=description" json:"description,omitempty"`
	UploadDate  uint32 `protobuf:"varint,15,opt,name=upload_date,json=uploadDate" json:"upload_date,omitempty"`
	CreateTime  uint64 `protobuf:"varint,16,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
}

func (m *QueryRow) Reset()                    { *m = QueryRow{} }
func (m *QueryRow) String() string            { return proto.CompactTextString(m) }
func (*QueryRow) ProtoMessage()               {}
func (*QueryRow) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *QueryRow) GetAssetId() string {
	if m != nil {
		return m.AssetId
	}
	return ""
}

func (m *QueryRow) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *QueryRow) GetAssetName() string {
	if m != nil {
		return m.AssetName
	}
	return ""
}

func (m *QueryRow) GetAssetType() string {
	if m != nil {
		return m.AssetType
	}
	return ""
}

func (m *QueryRow) GetFeatureTag1() string {
	if m != nil {
		return m.FeatureTag1
	}
	return ""
}

func (m *QueryRow) GetFeatureTag2() string {
	if m != nil {
		return m.FeatureTag2
	}
	return ""
}

func (m *QueryRow) GetFeatureTag3() string {
	if m != nil {
		return m.FeatureTag3
	}
	return ""
}

func (m *QueryRow) GetSamplePath() string {
	if m != nil {
		return m.SamplePath
	}
	return ""
}

func (m *QueryRow) GetSampleHash() string {
	if m != nil {
		return m.SampleHash
	}
	return ""
}

func (m *QueryRow) GetStoragePath() string {
	if m != nil {
		return m.StoragePath
	}
	return ""
}

func (m *QueryRow) GetStorageHash() string {
	if m != nil {
		return m.StorageHash
	}
	return ""
}

func (m *QueryRow) GetExpireTime() uint32 {
	if m != nil {
		return m.ExpireTime
	}
	return 0
}

func (m *QueryRow) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *QueryRow) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *QueryRow) GetUploadDate() uint32 {
	if m != nil {
		return m.UploadDate
	}
	return 0
}

func (m *QueryRow) GetCreateTime() uint64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

type QueryAllAssetRequest struct {
	Username  string     `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	SessionId string     `protobuf:"bytes,2,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	QueryPara *QueryPara `protobuf:"bytes,3,opt,name=query_para,json=queryPara" json:"query_para,omitempty"`
}

func (m *QueryAllAssetRequest) Reset()                    { *m = QueryAllAssetRequest{} }
func (m *QueryAllAssetRequest) String() string            { return proto.CompactTextString(m) }
func (*QueryAllAssetRequest) ProtoMessage()               {}
func (*QueryAllAssetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *QueryAllAssetRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *QueryAllAssetRequest) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *QueryAllAssetRequest) GetQueryPara() *QueryPara {
	if m != nil {
		return m.QueryPara
	}
	return nil
}

type QueryPara struct {
	Username  string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	SessionId string `protobuf:"bytes,2,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
}

func (m *QueryPara) Reset()                    { *m = QueryPara{} }
func (m *QueryPara) String() string            { return proto.CompactTextString(m) }
func (*QueryPara) ProtoMessage()               {}
func (*QueryPara) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *QueryPara) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *QueryPara) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

type QueryAllAssetResponse struct {
	Code uint32 `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
	Data string `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *QueryAllAssetResponse) Reset()                    { *m = QueryAllAssetResponse{} }
func (m *QueryAllAssetResponse) String() string            { return proto.CompactTextString(m) }
func (*QueryAllAssetResponse) ProtoMessage()               {}
func (*QueryAllAssetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *QueryAllAssetResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *QueryAllAssetResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *QueryAllAssetResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type ModifyRequest struct {
	//    string username = 1;
	//    string signature = 2;
	PostBody string `protobuf:"bytes,1,opt,name=postBody" json:"postBody,omitempty"`
}

func (m *ModifyRequest) Reset()                    { *m = ModifyRequest{} }
func (m *ModifyRequest) String() string            { return proto.CompactTextString(m) }
func (*ModifyRequest) ProtoMessage()               {}
func (*ModifyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *ModifyRequest) GetPostBody() string {
	if m != nil {
		return m.PostBody
	}
	return ""
}

type ModifyResponse struct {
	Code uint32 `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
	Data string `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *ModifyResponse) Reset()                    { *m = ModifyResponse{} }
func (m *ModifyResponse) String() string            { return proto.CompactTextString(m) }
func (*ModifyResponse) ProtoMessage()               {}
func (*ModifyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *ModifyResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ModifyResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *ModifyResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type GetFileUploadStatRequest struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	FileName string `protobuf:"bytes,2,opt,name=fileName" json:"fileName,omitempty"`
}

func (m *GetFileUploadStatRequest) Reset()                    { *m = GetFileUploadStatRequest{} }
func (m *GetFileUploadStatRequest) String() string            { return proto.CompactTextString(m) }
func (*GetFileUploadStatRequest) ProtoMessage()               {}
func (*GetFileUploadStatRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *GetFileUploadStatRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *GetFileUploadStatRequest) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

type GetFileUploadStatResponse struct {
	Code uint32 `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
	Data string `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *GetFileUploadStatResponse) Reset()                    { *m = GetFileUploadStatResponse{} }
func (m *GetFileUploadStatResponse) String() string            { return proto.CompactTextString(m) }
func (*GetFileUploadStatResponse) ProtoMessage()               {}
func (*GetFileUploadStatResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *GetFileUploadStatResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetFileUploadStatResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *GetFileUploadStatResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type GetDownLoadURLRequest struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	FileName string `protobuf:"bytes,2,opt,name=fileName" json:"fileName,omitempty"`
}

func (m *GetDownLoadURLRequest) Reset()                    { *m = GetDownLoadURLRequest{} }
func (m *GetDownLoadURLRequest) String() string            { return proto.CompactTextString(m) }
func (*GetDownLoadURLRequest) ProtoMessage()               {}
func (*GetDownLoadURLRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *GetDownLoadURLRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *GetDownLoadURLRequest) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

type GetDownLoadURLResponse struct {
	Code uint32 `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
	Data string `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *GetDownLoadURLResponse) Reset()                    { *m = GetDownLoadURLResponse{} }
func (m *GetDownLoadURLResponse) String() string            { return proto.CompactTextString(m) }
func (*GetDownLoadURLResponse) ProtoMessage()               {}
func (*GetDownLoadURLResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *GetDownLoadURLResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetDownLoadURLResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *GetDownLoadURLResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type QueryByIDRequest struct {
	PageSize int32  `protobuf:"varint,1,opt,name=pageSize" json:"pageSize,omitempty"`
	PageNum  int32  `protobuf:"varint,2,opt,name=pageNum" json:"pageNum,omitempty"`
	AssetID  string `protobuf:"bytes,3,opt,name=assetID" json:"assetID,omitempty"`
}

func (m *QueryByIDRequest) Reset()                    { *m = QueryByIDRequest{} }
func (m *QueryByIDRequest) String() string            { return proto.CompactTextString(m) }
func (*QueryByIDRequest) ProtoMessage()               {}
func (*QueryByIDRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *QueryByIDRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *QueryByIDRequest) GetPageNum() int32 {
	if m != nil {
		return m.PageNum
	}
	return 0
}

func (m *QueryByIDRequest) GetAssetID() string {
	if m != nil {
		return m.AssetID
	}
	return ""
}

type GetUserPurchaseAssetListRequest struct {
	PageSize int32  `protobuf:"varint,1,opt,name=pageSize" json:"pageSize,omitempty"`
	PageNum  int32  `protobuf:"varint,2,opt,name=pageNum" json:"pageNum,omitempty"`
	Username string `protobuf:"bytes,3,opt,name=username" json:"username,omitempty"`
}

func (m *GetUserPurchaseAssetListRequest) Reset()         { *m = GetUserPurchaseAssetListRequest{} }
func (m *GetUserPurchaseAssetListRequest) String() string { return proto.CompactTextString(m) }
func (*GetUserPurchaseAssetListRequest) ProtoMessage()    {}
func (*GetUserPurchaseAssetListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{24}
}

func (m *GetUserPurchaseAssetListRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetUserPurchaseAssetListRequest) GetPageNum() int32 {
	if m != nil {
		return m.PageNum
	}
	return 0
}

func (m *GetUserPurchaseAssetListRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type GetUserPurchaseAssetListResponse struct {
	Code int32              `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Data *QueryPurchaseData `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	Msg  string             `protobuf:"bytes,3,opt,name=msg" json:"msg,omitempty"`
}

func (m *GetUserPurchaseAssetListResponse) Reset()         { *m = GetUserPurchaseAssetListResponse{} }
func (m *GetUserPurchaseAssetListResponse) String() string { return proto.CompactTextString(m) }
func (*GetUserPurchaseAssetListResponse) ProtoMessage()    {}
func (*GetUserPurchaseAssetListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{25}
}

func (m *GetUserPurchaseAssetListResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetUserPurchaseAssetListResponse) GetData() *QueryPurchaseData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetUserPurchaseAssetListResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type QueryPurchaseData struct {
	PageNum  uint64              `protobuf:"varint,1,opt,name=pageNum" json:"pageNum,omitempty"`
	RowCount uint64              `protobuf:"varint,2,opt,name=rowCount" json:"rowCount,omitempty"`
	Row      []*QueryPurchaseRow `protobuf:"bytes,3,rep,name=row" json:"row,omitempty"`
}

func (m *QueryPurchaseData) Reset()                    { *m = QueryPurchaseData{} }
func (m *QueryPurchaseData) String() string            { return proto.CompactTextString(m) }
func (*QueryPurchaseData) ProtoMessage()               {}
func (*QueryPurchaseData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *QueryPurchaseData) GetPageNum() uint64 {
	if m != nil {
		return m.PageNum
	}
	return 0
}

func (m *QueryPurchaseData) GetRowCount() uint64 {
	if m != nil {
		return m.RowCount
	}
	return 0
}

func (m *QueryPurchaseData) GetRow() []*QueryPurchaseRow {
	if m != nil {
		return m.Row
	}
	return nil
}

type QueryPurchaseRow struct {
	Username  string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	SessionId string `protobuf:"bytes,2,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	AssetId   string `protobuf:"bytes,3,opt,name=asset_id,json=assetId" json:"asset_id,omitempty"`
	DataReqId string `protobuf:"bytes,4,opt,name=data_req_id,json=dataReqId" json:"data_req_id,omitempty"`
	Consumer  string `protobuf:"bytes,5,opt,name=consumer" json:"consumer,omitempty"`
}

func (m *QueryPurchaseRow) Reset()                    { *m = QueryPurchaseRow{} }
func (m *QueryPurchaseRow) String() string            { return proto.CompactTextString(m) }
func (*QueryPurchaseRow) ProtoMessage()               {}
func (*QueryPurchaseRow) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *QueryPurchaseRow) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *QueryPurchaseRow) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *QueryPurchaseRow) GetAssetId() string {
	if m != nil {
		return m.AssetId
	}
	return ""
}

func (m *QueryPurchaseRow) GetDataReqId() string {
	if m != nil {
		return m.DataReqId
	}
	return ""
}

func (m *QueryPurchaseRow) GetConsumer() string {
	if m != nil {
		return m.Consumer
	}
	return ""
}

func init() {
	proto.RegisterType((*GetFileUploadURLRequest)(nil), "GetFileUploadURLRequest")
	proto.RegisterType((*GetFileUploadURLResponse)(nil), "GetFileUploadURLResponse")
	proto.RegisterType((*RegisterFileRequest)(nil), "RegisterFileRequest")
	proto.RegisterType((*RegisterFileResponse)(nil), "RegisterFileResponse")
	proto.RegisterType((*QueryUploadedDataRequest)(nil), "QueryUploadedDataRequest")
	proto.RegisterType((*QueryUploadedDataResponse)(nil), "QueryUploadedDataResponse")
	proto.RegisterType((*QueryUploadedData)(nil), "QueryUploadedData")
	proto.RegisterType((*QueryUploadedRow)(nil), "QueryUploadedRow")
	proto.RegisterType((*RegisterRequest)(nil), "RegisterRequest")
	proto.RegisterType((*RegisterResponse)(nil), "RegisterResponse")
	proto.RegisterType((*QueryRequest)(nil), "QueryRequest")
	proto.RegisterType((*QueryResponse)(nil), "QueryResponse")
	proto.RegisterType((*QueryData)(nil), "QueryData")
	proto.RegisterType((*QueryRow)(nil), "QueryRow")
	proto.RegisterType((*QueryAllAssetRequest)(nil), "QueryAllAssetRequest")
	proto.RegisterType((*QueryPara)(nil), "QueryPara")
	proto.RegisterType((*QueryAllAssetResponse)(nil), "QueryAllAssetResponse")
	proto.RegisterType((*ModifyRequest)(nil), "ModifyRequest")
	proto.RegisterType((*ModifyResponse)(nil), "ModifyResponse")
	proto.RegisterType((*GetFileUploadStatRequest)(nil), "GetFileUploadStatRequest")
	proto.RegisterType((*GetFileUploadStatResponse)(nil), "GetFileUploadStatResponse")
	proto.RegisterType((*GetDownLoadURLRequest)(nil), "GetDownLoadURLRequest")
	proto.RegisterType((*GetDownLoadURLResponse)(nil), "GetDownLoadURLResponse")
	proto.RegisterType((*QueryByIDRequest)(nil), "QueryByIDRequest")
	proto.RegisterType((*GetUserPurchaseAssetListRequest)(nil), "GetUserPurchaseAssetListRequest")
	proto.RegisterType((*GetUserPurchaseAssetListResponse)(nil), "GetUserPurchaseAssetListResponse")
	proto.RegisterType((*QueryPurchaseData)(nil), "QueryPurchaseData")
	proto.RegisterType((*QueryPurchaseRow)(nil), "QueryPurchaseRow")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Asset service

type AssetClient interface {
	GetFileUploadURL(ctx context.Context, in *GetFileUploadURLRequest, opts ...client.CallOption) (*GetFileUploadURLResponse, error)
	GetFileUploadStat(ctx context.Context, in *GetFileUploadStatRequest, opts ...client.CallOption) (*GetFileUploadStatResponse, error)
	RegisterFile(ctx context.Context, in *RegisterFileRequest, opts ...client.CallOption) (*RegisterFileResponse, error)
	QueryUploadedData(ctx context.Context, in *QueryUploadedDataRequest, opts ...client.CallOption) (*QueryUploadedDataResponse, error)
	GetDownLoadURL(ctx context.Context, in *GetDownLoadURLRequest, opts ...client.CallOption) (*GetDownLoadURLResponse, error)
	Register(ctx context.Context, in *RegisterRequest, opts ...client.CallOption) (*RegisterResponse, error)
	Query(ctx context.Context, in *QueryRequest, opts ...client.CallOption) (*QueryResponse, error)
	QueryAllAsset(ctx context.Context, in *QueryAllAssetRequest, opts ...client.CallOption) (*QueryAllAssetResponse, error)
	Modify(ctx context.Context, in *ModifyRequest, opts ...client.CallOption) (*ModifyResponse, error)
	QueryByID(ctx context.Context, in *QueryByIDRequest, opts ...client.CallOption) (*QueryResponse, error)
	GetUserPurchaseAssetList(ctx context.Context, in *GetUserPurchaseAssetListRequest, opts ...client.CallOption) (*QueryResponse, error)
}

type assetClient struct {
	c           client.Client
	serviceName string
}

func NewAssetClient(serviceName string, c client.Client) AssetClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "asset"
	}
	return &assetClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *assetClient) GetFileUploadURL(ctx context.Context, in *GetFileUploadURLRequest, opts ...client.CallOption) (*GetFileUploadURLResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Asset.GetFileUploadURL", in)
	out := new(GetFileUploadURLResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetClient) GetFileUploadStat(ctx context.Context, in *GetFileUploadStatRequest, opts ...client.CallOption) (*GetFileUploadStatResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Asset.GetFileUploadStat", in)
	out := new(GetFileUploadStatResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetClient) RegisterFile(ctx context.Context, in *RegisterFileRequest, opts ...client.CallOption) (*RegisterFileResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Asset.RegisterFile", in)
	out := new(RegisterFileResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetClient) QueryUploadedData(ctx context.Context, in *QueryUploadedDataRequest, opts ...client.CallOption) (*QueryUploadedDataResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Asset.QueryUploadedData", in)
	out := new(QueryUploadedDataResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetClient) GetDownLoadURL(ctx context.Context, in *GetDownLoadURLRequest, opts ...client.CallOption) (*GetDownLoadURLResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Asset.GetDownLoadURL", in)
	out := new(GetDownLoadURLResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetClient) Register(ctx context.Context, in *RegisterRequest, opts ...client.CallOption) (*RegisterResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Asset.Register", in)
	out := new(RegisterResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetClient) Query(ctx context.Context, in *QueryRequest, opts ...client.CallOption) (*QueryResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Asset.Query", in)
	out := new(QueryResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetClient) QueryAllAsset(ctx context.Context, in *QueryAllAssetRequest, opts ...client.CallOption) (*QueryAllAssetResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Asset.QueryAllAsset", in)
	out := new(QueryAllAssetResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetClient) Modify(ctx context.Context, in *ModifyRequest, opts ...client.CallOption) (*ModifyResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Asset.Modify", in)
	out := new(ModifyResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetClient) QueryByID(ctx context.Context, in *QueryByIDRequest, opts ...client.CallOption) (*QueryResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Asset.QueryByID", in)
	out := new(QueryResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetClient) GetUserPurchaseAssetList(ctx context.Context, in *GetUserPurchaseAssetListRequest, opts ...client.CallOption) (*QueryResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Asset.GetUserPurchaseAssetList", in)
	out := new(QueryResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Asset service

type AssetHandler interface {
	GetFileUploadURL(context.Context, *GetFileUploadURLRequest, *GetFileUploadURLResponse) error
	GetFileUploadStat(context.Context, *GetFileUploadStatRequest, *GetFileUploadStatResponse) error
	RegisterFile(context.Context, *RegisterFileRequest, *RegisterFileResponse) error
	QueryUploadedData(context.Context, *QueryUploadedDataRequest, *QueryUploadedDataResponse) error
	GetDownLoadURL(context.Context, *GetDownLoadURLRequest, *GetDownLoadURLResponse) error
	Register(context.Context, *RegisterRequest, *RegisterResponse) error
	Query(context.Context, *QueryRequest, *QueryResponse) error
	QueryAllAsset(context.Context, *QueryAllAssetRequest, *QueryAllAssetResponse) error
	Modify(context.Context, *ModifyRequest, *ModifyResponse) error
	QueryByID(context.Context, *QueryByIDRequest, *QueryResponse) error
	GetUserPurchaseAssetList(context.Context, *GetUserPurchaseAssetListRequest, *QueryResponse) error
}

func RegisterAssetHandler(s server.Server, hdlr AssetHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Asset{hdlr}, opts...))
}

type Asset struct {
	AssetHandler
}

func (h *Asset) GetFileUploadURL(ctx context.Context, in *GetFileUploadURLRequest, out *GetFileUploadURLResponse) error {
	return h.AssetHandler.GetFileUploadURL(ctx, in, out)
}

func (h *Asset) GetFileUploadStat(ctx context.Context, in *GetFileUploadStatRequest, out *GetFileUploadStatResponse) error {
	return h.AssetHandler.GetFileUploadStat(ctx, in, out)
}

func (h *Asset) RegisterFile(ctx context.Context, in *RegisterFileRequest, out *RegisterFileResponse) error {
	return h.AssetHandler.RegisterFile(ctx, in, out)
}

func (h *Asset) QueryUploadedData(ctx context.Context, in *QueryUploadedDataRequest, out *QueryUploadedDataResponse) error {
	return h.AssetHandler.QueryUploadedData(ctx, in, out)
}

func (h *Asset) GetDownLoadURL(ctx context.Context, in *GetDownLoadURLRequest, out *GetDownLoadURLResponse) error {
	return h.AssetHandler.GetDownLoadURL(ctx, in, out)
}

func (h *Asset) Register(ctx context.Context, in *RegisterRequest, out *RegisterResponse) error {
	return h.AssetHandler.Register(ctx, in, out)
}

func (h *Asset) Query(ctx context.Context, in *QueryRequest, out *QueryResponse) error {
	return h.AssetHandler.Query(ctx, in, out)
}

func (h *Asset) QueryAllAsset(ctx context.Context, in *QueryAllAssetRequest, out *QueryAllAssetResponse) error {
	return h.AssetHandler.QueryAllAsset(ctx, in, out)
}

func (h *Asset) Modify(ctx context.Context, in *ModifyRequest, out *ModifyResponse) error {
	return h.AssetHandler.Modify(ctx, in, out)
}

func (h *Asset) QueryByID(ctx context.Context, in *QueryByIDRequest, out *QueryResponse) error {
	return h.AssetHandler.QueryByID(ctx, in, out)
}

func (h *Asset) GetUserPurchaseAssetList(ctx context.Context, in *GetUserPurchaseAssetListRequest, out *QueryResponse) error {
	return h.AssetHandler.GetUserPurchaseAssetList(ctx, in, out)
}

func init() { proto.RegisterFile("asset.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1107 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0xcd, 0x6e, 0xdb, 0xc6,
	0x13, 0x97, 0x23, 0xcb, 0x16, 0x47, 0xfe, 0x90, 0xf7, 0x6f, 0x3b, 0x34, 0x83, 0xd8, 0xfe, 0x6f,
	0x81, 0xc2, 0x45, 0xd0, 0x45, 0x2d, 0xa3, 0xc7, 0x02, 0x4d, 0x22, 0xc4, 0x75, 0xa1, 0xaa, 0x0a,
	0x63, 0x5d, 0x2b, 0xac, 0xc5, 0xb5, 0x44, 0x40, 0x12, 0x69, 0xee, 0x12, 0xae, 0x8a, 0x1e, 0x7a,
	0xef, 0x6b, 0xf4, 0x41, 0x7a, 0xeb, 0x6b, 0x15, 0xfb, 0x41, 0x86, 0xa4, 0xa8, 0x54, 0x8d, 0x9a,
	0xdb, 0xce, 0xc7, 0xce, 0xcc, 0xce, 0xfe, 0x76, 0x66, 0x16, 0x1a, 0x94, 0x73, 0x26, 0x48, 0x18,
	0x05, 0x22, 0xc0, 0x5f, 0xc3, 0xd3, 0x6b, 0x26, 0xde, 0xf8, 0x13, 0xd6, 0x0f, 0x27, 0x01, 0xf5,
	0xfa, 0x6e, 0xc7, 0x65, 0x0f, 0x31, 0xe3, 0x02, 0x39, 0x50, 0x0f, 0x03, 0x2e, 0x5e, 0x05, 0xde,
	0xdc, 0xde, 0x38, 0xdf, 0xb8, 0xb0, 0xdc, 0x94, 0xc6, 0xb7, 0x60, 0x2f, 0x6e, 0xe3, 0x61, 0x30,
	0xe3, 0x0c, 0x21, 0xd8, 0x1c, 0x06, 0x1e, 0x53, 0x7b, 0x76, 0x5d, 0xb5, 0x46, 0x4d, 0xa8, 0x4e,
	0xf9, 0xc8, 0x7e, 0xa2, 0xcc, 0xc8, 0xa5, 0xd4, 0xf2, 0xa8, 0xa0, 0x76, 0x55, 0xb1, 0xd4, 0x1a,
	0x5f, 0xc2, 0xff, 0x5c, 0x36, 0xf2, 0xb9, 0x60, 0x91, 0x34, 0xbd, 0x4a, 0x20, 0x3d, 0x38, 0xcc,
	0x6f, 0x59, 0x3b, 0x88, 0x09, 0xd8, 0x6f, 0x63, 0x16, 0xcd, 0xf5, 0xc1, 0x98, 0xd7, 0xa6, 0x82,
	0x66, 0x23, 0xa1, 0x23, 0xf6, 0xce, 0xff, 0x45, 0x5b, 0xae, 0xb9, 0x29, 0x8d, 0x6c, 0xd8, 0x96,
	0xeb, 0x6e, 0x3c, 0x55, 0x1e, 0x6a, 0x6e, 0x42, 0xca, 0x5d, 0x31, 0x67, 0xd1, 0x8c, 0x4e, 0x99,
	0xf1, 0x94, 0xd2, 0xd8, 0x87, 0x93, 0x12, 0x6f, 0x25, 0x87, 0xa8, 0x99, 0x43, 0x7c, 0x6e, 0x42,
	0x96, 0x3e, 0x1a, 0x2d, 0x44, 0x16, 0x77, 0x2b, 0x79, 0x72, 0xd8, 0x6a, 0x7a, 0x58, 0x3c, 0x83,
	0x83, 0x05, 0xe5, 0x6c, 0xd4, 0xd2, 0xcb, 0x66, 0x2e, 0xea, 0x28, 0x78, 0x7c, 0x1d, 0xc4, 0x33,
	0xa1, 0x9c, 0x6d, 0xba, 0x29, 0x8d, 0x3e, 0x83, 0x6a, 0x14, 0x3c, 0xda, 0xd5, 0xf3, 0xea, 0x45,
	0xa3, 0x75, 0x90, 0x8f, 0xc1, 0x0d, 0x1e, 0x5d, 0x29, 0xc5, 0x7f, 0x6d, 0x40, 0xb3, 0x28, 0xc9,
	0xe5, 0x62, 0x23, 0x9f, 0x0b, 0xf4, 0x0c, 0xac, 0x7b, 0x7f, 0xc2, 0x06, 0x4a, 0xa8, 0x6f, 0xa9,
	0x2e, 0x19, 0xdd, 0xac, 0x90, 0xcb, 0xdc, 0x57, 0x75, 0x3c, 0x92, 0xa1, 0x72, 0x7f, 0x06, 0x0d,
	0x25, 0x0c, 0x83, 0x89, 0x3f, 0x9c, 0xdb, 0x9b, 0x6a, 0x2f, 0x48, 0x56, 0x4f, 0x71, 0x52, 0x85,
	0x59, 0x3c, 0xbd, 0x63, 0x91, 0x5d, 0x53, 0xfb, 0x95, 0x42, 0x57, 0x71, 0xa4, 0x79, 0x1a, 0x8b,
	0xf1, 0x20, 0xa4, 0x62, 0x6c, 0x6f, 0x69, 0xdf, 0x92, 0xd1, 0xa3, 0x62, 0x8c, 0xbf, 0x84, 0xfd,
	0x04, 0x64, 0xab, 0x60, 0xb2, 0x03, 0xcd, 0xf7, 0xea, 0x6b, 0xe3, 0xf1, 0xb7, 0x0d, 0xd8, 0x51,
	0x69, 0xfc, 0x64, 0x20, 0x44, 0xa7, 0x00, 0xf7, 0x8c, 0x8a, 0x38, 0x62, 0xb7, 0x74, 0xa4, 0xb2,
	0x27, 0x93, 0x93, 0x72, 0x70, 0x1f, 0x76, 0x4d, 0x04, 0x1f, 0x00, 0xe6, 0x69, 0x0e, 0x98, 0xa0,
	0x41, 0xf1, 0x41, 0x40, 0xfe, 0x04, 0x56, 0xaa, 0xf4, 0x91, 0x40, 0x7c, 0x96, 0x05, 0xa2, 0xa5,
	0x7d, 0xa6, 0x00, 0xfc, 0x7d, 0x13, 0xea, 0x09, 0x07, 0x9d, 0x40, 0x5d, 0xd5, 0xbd, 0x81, 0xef,
	0x99, 0x0b, 0xdb, 0x56, 0xf4, 0x8d, 0x97, 0x4b, 0xcd, 0x93, 0x42, 0x6a, 0x9e, 0x03, 0xe8, 0x6d,
	0x99, 0xc4, 0x59, 0x8a, 0xd3, 0xcd, 0x89, 0xc5, 0x3c, 0x64, 0x06, 0x77, 0x5a, 0x7c, 0x3b, 0x0f,
	0x19, 0xfa, 0x3f, 0xec, 0x98, 0x34, 0x0e, 0x04, 0x1d, 0x5d, 0x2a, 0xdc, 0x59, 0x6e, 0xe3, 0x7d,
	0x6a, 0x2f, 0x0b, 0x2a, 0x2d, 0x83, 0xbd, 0x8c, 0x4a, 0xab, 0xa0, 0x72, 0x65, 0x6f, 0x17, 0x55,
	0xae, 0x24, 0xbe, 0x39, 0x9d, 0x86, 0xf2, 0x09, 0x48, 0x00, 0xd7, 0xf5, 0x03, 0xd0, 0x2c, 0x09,
	0xe1, 0x8c, 0xc2, 0x98, 0xf2, 0xb1, 0x6d, 0x65, 0x15, 0xbe, 0xa3, 0x7c, 0x2c, 0x9d, 0x70, 0x11,
	0x44, 0x74, 0x64, 0x4c, 0x80, 0x76, 0x62, 0x78, 0xca, 0x46, 0x46, 0x45, 0x19, 0x69, 0xe4, 0x54,
	0x94, 0x95, 0x33, 0x68, 0xb0, 0x9f, 0x43, 0x5f, 0x46, 0xea, 0x4f, 0x99, 0xbd, 0xa3, 0xd0, 0x0e,
	0x9a, 0x75, 0xeb, 0x4f, 0x19, 0x3a, 0x84, 0x5a, 0x18, 0xf9, 0x43, 0x66, 0xef, 0xaa, 0x9b, 0xd4,
	0x04, 0x3a, 0x87, 0x86, 0xc7, 0xf8, 0x30, 0xf2, 0x43, 0xe1, 0x07, 0x33, 0x7b, 0x4f, 0x1b, 0xce,
	0xb0, 0xa4, 0xe1, 0x58, 0x95, 0x91, 0x81, 0x47, 0x05, 0xb3, 0xf7, 0xb5, 0x61, 0xcd, 0x6a, 0x53,
	0xa1, 0x4a, 0xc0, 0x30, 0x62, 0x54, 0x18, 0xcf, 0x4d, 0x0d, 0x62, 0xcd, 0x92, 0x9e, 0xf1, 0xaf,
	0x70, 0xa8, 0xc0, 0xf0, 0x72, 0x32, 0x79, 0x29, 0x2f, 0x28, 0xf3, 0x9c, 0x96, 0x56, 0xa4, 0xe7,
	0x00, 0x9c, 0x71, 0xee, 0x07, 0x33, 0x09, 0x1b, 0x8d, 0x0d, 0xcb, 0x70, 0x6e, 0x3c, 0xf4, 0x05,
	0xc0, 0x83, 0x34, 0x39, 0x08, 0x69, 0xa4, 0x1f, 0x6d, 0x0a, 0xfc, 0x1e, 0x8d, 0xa8, 0x6b, 0x3d,
	0x24, 0x4b, 0xfc, 0xc6, 0x60, 0x5d, 0x12, 0x6b, 0xb8, 0xc4, 0x6f, 0xe1, 0xa8, 0x70, 0x8a, 0xb5,
	0x0b, 0xcc, 0x0b, 0xd8, 0xfd, 0x21, 0xf0, 0xfc, 0xfb, 0xf9, 0x2a, 0xb5, 0xed, 0x7b, 0xd8, 0x4b,
	0x94, 0xd7, 0x76, 0xec, 0x16, 0x86, 0x88, 0x77, 0x82, 0xae, 0x74, 0x2b, 0x0e, 0xa4, 0x6d, 0xa1,
	0xd8, 0x26, 0x70, 0x1f, 0x4e, 0x4a, 0x6c, 0xae, 0x1d, 0xea, 0x8f, 0x70, 0x74, 0xcd, 0x44, 0x3b,
	0x78, 0x9c, 0x75, 0x16, 0x86, 0xa4, 0x8f, 0x8a, 0xd3, 0x85, 0xe3, 0xa2, 0xc1, 0xb5, 0x83, 0xbc,
	0x33, 0xfd, 0xf6, 0xd5, 0xfc, 0xa6, 0xbd, 0x5e, 0xb3, 0xb0, 0xc1, 0x14, 0xc7, 0xb6, 0x71, 0x90,
	0x90, 0x98, 0xc3, 0xd9, 0x35, 0x13, 0x7d, 0xce, 0xa2, 0x5e, 0x1c, 0x0d, 0xc7, 0x94, 0x33, 0x05,
	0xc3, 0x8e, 0xcf, 0xc5, 0xa7, 0x1b, 0x92, 0x42, 0x38, 0x5f, 0xee, 0xf4, 0xdf, 0xce, 0x4a, 0x89,
	0x89, 0x95, 0x66, 0xa5, 0xac, 0xf2, 0x7f, 0x38, 0x2b, 0x25, 0x66, 0xd3, 0x56, 0xf5, 0x47, 0x32,
	0x2b, 0x65, 0x24, 0xeb, 0x54, 0xa6, 0x6c, 0xb7, 0xab, 0xe6, 0xbb, 0xdd, 0x29, 0x34, 0xe4, 0xa1,
	0x07, 0x11, 0x7b, 0x90, 0x52, 0xd3, 0xb3, 0x3c, 0x3d, 0xe5, 0xea, 0x6e, 0x38, 0x0c, 0x66, 0x3c,
	0x9e, 0x9a, 0x39, 0xc9, 0x72, 0x53, 0xba, 0xf5, 0x67, 0x0d, 0x6a, 0x2a, 0xf5, 0xe8, 0x06, 0x9a,
	0xc5, 0x0f, 0x00, 0xb2, 0xc9, 0x92, 0xaf, 0x84, 0x73, 0x42, 0x96, 0xfd, 0x16, 0x70, 0x05, 0x75,
	0xe0, 0x60, 0xe1, 0xc9, 0xa2, 0xc2, 0x8e, 0x4c, 0x69, 0x70, 0x1c, 0xb2, 0xf4, 0x85, 0xe3, 0x0a,
	0xfa, 0x06, 0x76, 0xb2, 0x1f, 0x02, 0x74, 0x48, 0x4a, 0xbe, 0x14, 0xce, 0x11, 0x29, 0xfb, 0x35,
	0xe8, 0x60, 0x16, 0x87, 0xe4, 0x13, 0xb2, 0xec, 0x47, 0xe0, 0x38, 0x64, 0xe9, 0xf8, 0x8e, 0x2b,
	0xe8, 0x35, 0xec, 0xe5, 0x5f, 0x39, 0x3a, 0x26, 0xa5, 0x75, 0xc4, 0x79, 0x4a, 0xca, 0xcb, 0x01,
	0xae, 0xa0, 0x4b, 0xa8, 0x27, 0xc1, 0xa2, 0x26, 0x29, 0x0c, 0xa2, 0xce, 0x01, 0x29, 0xce, 0x9a,
	0xb8, 0x82, 0x2e, 0xa0, 0xa6, 0xc2, 0x42, 0xbb, 0x24, 0x3b, 0x3a, 0x3a, 0x7b, 0x24, 0x37, 0xc7,
	0xe1, 0x0a, 0xfa, 0xd6, 0x8c, 0x76, 0x49, 0x3f, 0x41, 0x47, 0xa4, 0xac, 0x4b, 0x3a, 0xc7, 0xa4,
	0xb4, 0xed, 0xe0, 0x0a, 0x7a, 0x01, 0x5b, 0xba, 0x23, 0xa0, 0x3d, 0x92, 0xeb, 0x23, 0xce, 0x3e,
	0xc9, 0xb7, 0x0a, 0x5c, 0x41, 0x5f, 0x99, 0x36, 0x28, 0x4b, 0x14, 0x32, 0x8f, 0x21, 0x53, 0xae,
	0x4a, 0x02, 0xec, 0xaa, 0x26, 0x51, 0xfa, 0xf6, 0xd1, 0x39, 0xf9, 0x87, 0x5a, 0xb4, 0x68, 0xef,
	0x6e, 0x4b, 0xfd, 0x7b, 0xaf, 0xfe, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x70, 0x6c, 0x0b, 0xba, 0x06,
	0x0f, 0x00, 0x00,
}
