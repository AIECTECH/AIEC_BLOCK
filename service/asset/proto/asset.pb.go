// Code generated by protoc-gen-go. DO NOT EDIT.
// source: asset.proto

/*
Package asset is a generated protocol buffer package.

It is generated from these files:
	asset.proto

It has these top-level messages:
	PushTxRequest
	GetFileUploadURLRequest
	GetFileUploadURLResponse
	RegisterFileResponse
	QueryUploadedDataResponse
	QueryUploadedData
	QueryUploadedRow
	RegisterResponse
	GetDownLoadURLRequest
	GetDownLoadURLResponse
	PreSaleNoticeResponse
	QueryRequest
	QueryAssetResponse
	QueryAssetData
	AssetData
	QueryMyNoticeRequest
	QueryMyNoticeResponse
	QueryNoticeData
	QueryNoticeRow
*/
package asset

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PushTxRequest struct {
	Version     uint32 `protobuf:"varint,1,opt,name=version" json:"version"`
	CursorNum   uint32 `protobuf:"varint,2,opt,name=cursor_num,json=cursorNum" json:"cursor_num"`
	CursorLabel uint32 `protobuf:"varint,3,opt,name=cursor_label,json=cursorLabel" json:"cursor_label"`
	Lifetime    uint64 `protobuf:"varint,4,opt,name=lifetime" json:"lifetime"`
	Sender      string `protobuf:"bytes,5,opt,name=sender" json:"sender"`
	Contract    string `protobuf:"bytes,6,opt,name=contract" json:"contract"`
	Method      string `protobuf:"bytes,7,opt,name=method" json:"method"`
	Param       string `protobuf:"bytes,8,opt,name=param" json:"param"`
	SigAlg      uint32 `protobuf:"varint,9,opt,name=sig_alg,json=sigAlg" json:"sig_alg"`
	Signature   string `protobuf:"bytes,10,opt,name=signature" json:"signature"`
}

func (m *PushTxRequest) Reset()                    { *m = PushTxRequest{} }
func (m *PushTxRequest) String() string            { return proto.CompactTextString(m) }
func (*PushTxRequest) ProtoMessage()               {}
func (*PushTxRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PushTxRequest) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *PushTxRequest) GetCursorNum() uint32 {
	if m != nil {
		return m.CursorNum
	}
	return 0
}

func (m *PushTxRequest) GetCursorLabel() uint32 {
	if m != nil {
		return m.CursorLabel
	}
	return 0
}

func (m *PushTxRequest) GetLifetime() uint64 {
	if m != nil {
		return m.Lifetime
	}
	return 0
}

func (m *PushTxRequest) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *PushTxRequest) GetContract() string {
	if m != nil {
		return m.Contract
	}
	return ""
}

func (m *PushTxRequest) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *PushTxRequest) GetParam() string {
	if m != nil {
		return m.Param
	}
	return ""
}

func (m *PushTxRequest) GetSigAlg() uint32 {
	if m != nil {
		return m.SigAlg
	}
	return 0
}

func (m *PushTxRequest) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type GetFileUploadURLRequest struct {
	//    string username = 1;
	//    int64 fileSize = 2;
	//    string fileName = 3;
	//    int32 filePolicy = 4;
	//    int32 fileNumber = 5;
	//    string fileash = 6;
	//    string signature = 7;
	PostBody string `protobuf:"bytes,1,opt,name=postBody" json:"postBody"`
}

func (m *GetFileUploadURLRequest) Reset()                    { *m = GetFileUploadURLRequest{} }
func (m *GetFileUploadURLRequest) String() string            { return proto.CompactTextString(m) }
func (*GetFileUploadURLRequest) ProtoMessage()               {}
func (*GetFileUploadURLRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetFileUploadURLRequest) GetPostBody() string {
	if m != nil {
		return m.PostBody
	}
	return ""
}

type GetFileUploadURLResponse struct {
	Code uint32 `protobuf:"varint,1,opt,name=code" json:"code"`
	Msg  string `protobuf:"bytes,2,opt,name=msg" json:"msg"`
	Data string `protobuf:"bytes,3,opt,name=data" json:"data"`
}

func (m *GetFileUploadURLResponse) Reset()                    { *m = GetFileUploadURLResponse{} }
func (m *GetFileUploadURLResponse) String() string            { return proto.CompactTextString(m) }
func (*GetFileUploadURLResponse) ProtoMessage()               {}
func (*GetFileUploadURLResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetFileUploadURLResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetFileUploadURLResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *GetFileUploadURLResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type RegisterFileResponse struct {
	Code uint32 `protobuf:"varint,1,opt,name=code" json:"code"`
	Msg  string `protobuf:"bytes,2,opt,name=msg" json:"msg"`
	Data string `protobuf:"bytes,3,opt,name=data" json:"data"`
}

func (m *RegisterFileResponse) Reset()                    { *m = RegisterFileResponse{} }
func (m *RegisterFileResponse) String() string            { return proto.CompactTextString(m) }
func (*RegisterFileResponse) ProtoMessage()               {}
func (*RegisterFileResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *RegisterFileResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *RegisterFileResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *RegisterFileResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type QueryUploadedDataResponse struct {
	Code int32              `protobuf:"varint,1,opt,name=code" json:"code"`
	Data *QueryUploadedData `protobuf:"bytes,2,opt,name=data" json:"data"`
	Msg  string             `protobuf:"bytes,3,opt,name=msg" json:"msg"`
}

func (m *QueryUploadedDataResponse) Reset()                    { *m = QueryUploadedDataResponse{} }
func (m *QueryUploadedDataResponse) String() string            { return proto.CompactTextString(m) }
func (*QueryUploadedDataResponse) ProtoMessage()               {}
func (*QueryUploadedDataResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *QueryUploadedDataResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *QueryUploadedDataResponse) GetData() *QueryUploadedData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *QueryUploadedDataResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type QueryUploadedData struct {
	PageNum  uint32              `protobuf:"varint,1,opt,name=pageNum" json:"pageNum"`
	RowCount uint32              `protobuf:"varint,2,opt,name=rowCount" json:"rowCount"`
	Row      []*QueryUploadedRow `protobuf:"bytes,3,rep,name=row" json:"row"`
}

func (m *QueryUploadedData) Reset()                    { *m = QueryUploadedData{} }
func (m *QueryUploadedData) String() string            { return proto.CompactTextString(m) }
func (*QueryUploadedData) ProtoMessage()               {}
func (*QueryUploadedData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *QueryUploadedData) GetPageNum() uint32 {
	if m != nil {
		return m.PageNum
	}
	return 0
}

func (m *QueryUploadedData) GetRowCount() uint32 {
	if m != nil {
		return m.RowCount
	}
	return 0
}

func (m *QueryUploadedData) GetRow() []*QueryUploadedRow {
	if m != nil {
		return m.Row
	}
	return nil
}

type QueryUploadedRow struct {
	Username   string `protobuf:"bytes,1,opt,name=username" json:"username"`
	FileHash   string `protobuf:"bytes,2,opt,name=file_hash,json=fileHash" json:"file_hash"`
	FileName   string `protobuf:"bytes,3,opt,name=file_name,json=fileName" json:"file_name"`
	FileSize   uint64 `protobuf:"varint,4,opt,name=file_size,json=fileSize" json:"file_size"`
	FilePolicy string `protobuf:"bytes,5,opt,name=file_policy,json=filePolicy" json:"file_policy"`
	FileNumber uint64 `protobuf:"varint,6,opt,name=file_number,json=fileNumber" json:"file_number"`
	SimOrAss   uint32 `protobuf:"varint,7,opt,name=sim_or_ass,json=simOrAss" json:"sim_or_ass"`
	OpType     uint32 `protobuf:"varint,8,opt,name=op_type,json=opType" json:"op_type"`
	StoreAddr  string `protobuf:"bytes,9,opt,name=store_addr,json=storeAddr" json:"store_addr"`
	CreateTime uint64 `protobuf:"varint,10,opt,name=create_time,json=createTime" json:"create_time"`
}

func (m *QueryUploadedRow) Reset()                    { *m = QueryUploadedRow{} }
func (m *QueryUploadedRow) String() string            { return proto.CompactTextString(m) }
func (*QueryUploadedRow) ProtoMessage()               {}
func (*QueryUploadedRow) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *QueryUploadedRow) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *QueryUploadedRow) GetFileHash() string {
	if m != nil {
		return m.FileHash
	}
	return ""
}

func (m *QueryUploadedRow) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *QueryUploadedRow) GetFileSize() uint64 {
	if m != nil {
		return m.FileSize
	}
	return 0
}

func (m *QueryUploadedRow) GetFilePolicy() string {
	if m != nil {
		return m.FilePolicy
	}
	return ""
}

func (m *QueryUploadedRow) GetFileNumber() uint64 {
	if m != nil {
		return m.FileNumber
	}
	return 0
}

func (m *QueryUploadedRow) GetSimOrAss() uint32 {
	if m != nil {
		return m.SimOrAss
	}
	return 0
}

func (m *QueryUploadedRow) GetOpType() uint32 {
	if m != nil {
		return m.OpType
	}
	return 0
}

func (m *QueryUploadedRow) GetStoreAddr() string {
	if m != nil {
		return m.StoreAddr
	}
	return ""
}

func (m *QueryUploadedRow) GetCreateTime() uint64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

type RegisterResponse struct {
	Code uint32 `protobuf:"varint,1,opt,name=code" json:"code"`
	Msg  string `protobuf:"bytes,2,opt,name=msg" json:"msg"`
	Data string `protobuf:"bytes,3,opt,name=data" json:"data"`
}

func (m *RegisterResponse) Reset()                    { *m = RegisterResponse{} }
func (m *RegisterResponse) String() string            { return proto.CompactTextString(m) }
func (*RegisterResponse) ProtoMessage()               {}
func (*RegisterResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *RegisterResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *RegisterResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *RegisterResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

// message GetFileUploadStatRequest {
// string username = 1;
// string fileName = 2;
// }
// message GetFileUploadStatResponse {
// uint32 code = 1;
// string msg = 2;
// string data = 3;
// }
type GetDownLoadURLRequest struct {
	PageSize  uint32 `protobuf:"varint,1,opt,name=page_size,json=pageSize" json:"page_size"`
	PageNum   uint32 `protobuf:"varint,2,opt,name=page_num,json=pageNum" json:"page_num"`
	Username  string `protobuf:"bytes,3,opt,name=username" json:"username"`
	Random    string `protobuf:"bytes,4,opt,name=random" json:"random"`
	FileId    string `protobuf:"bytes,5,opt,name=file_id,json=fileId" json:"file_id"`
	Signature string `protobuf:"bytes,6,opt,name=signature" json:"signature"`
}

func (m *GetDownLoadURLRequest) Reset()                    { *m = GetDownLoadURLRequest{} }
func (m *GetDownLoadURLRequest) String() string            { return proto.CompactTextString(m) }
func (*GetDownLoadURLRequest) ProtoMessage()               {}
func (*GetDownLoadURLRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *GetDownLoadURLRequest) GetPageSize() uint32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetDownLoadURLRequest) GetPageNum() uint32 {
	if m != nil {
		return m.PageNum
	}
	return 0
}

func (m *GetDownLoadURLRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *GetDownLoadURLRequest) GetRandom() string {
	if m != nil {
		return m.Random
	}
	return ""
}

func (m *GetDownLoadURLRequest) GetFileId() string {
	if m != nil {
		return m.FileId
	}
	return ""
}

func (m *GetDownLoadURLRequest) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type GetDownLoadURLResponse struct {
	Code uint32 `protobuf:"varint,1,opt,name=code" json:"code"`
	Msg  string `protobuf:"bytes,2,opt,name=msg" json:"msg"`
	Data string `protobuf:"bytes,3,opt,name=data" json:"data"`
}

func (m *GetDownLoadURLResponse) Reset()                    { *m = GetDownLoadURLResponse{} }
func (m *GetDownLoadURLResponse) String() string            { return proto.CompactTextString(m) }
func (*GetDownLoadURLResponse) ProtoMessage()               {}
func (*GetDownLoadURLResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *GetDownLoadURLResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetDownLoadURLResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *GetDownLoadURLResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type PreSaleNoticeResponse struct {
	Code uint32 `protobuf:"varint,1,opt,name=code" json:"code"`
	Msg  string `protobuf:"bytes,2,opt,name=msg" json:"msg"`
	Data string `protobuf:"bytes,3,opt,name=data" json:"data"`
}

func (m *PreSaleNoticeResponse) Reset()                    { *m = PreSaleNoticeResponse{} }
func (m *PreSaleNoticeResponse) String() string            { return proto.CompactTextString(m) }
func (*PreSaleNoticeResponse) ProtoMessage()               {}
func (*PreSaleNoticeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *PreSaleNoticeResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *PreSaleNoticeResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *PreSaleNoticeResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type QueryRequest struct {
	PageSize  uint32 `protobuf:"varint,1,opt,name=page_size,json=pageSize" json:"page_size"`
	PageNum   uint32 `protobuf:"varint,2,opt,name=page_num,json=pageNum" json:"page_num"`
	Username  string `protobuf:"bytes,3,opt,name=username" json:"username"`
	Random    string `protobuf:"bytes,4,opt,name=random" json:"random"`
	Signature string `protobuf:"bytes,5,opt,name=signature" json:"signature"`
}

func (m *QueryRequest) Reset()                    { *m = QueryRequest{} }
func (m *QueryRequest) String() string            { return proto.CompactTextString(m) }
func (*QueryRequest) ProtoMessage()               {}
func (*QueryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *QueryRequest) GetPageSize() uint32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *QueryRequest) GetPageNum() uint32 {
	if m != nil {
		return m.PageNum
	}
	return 0
}

func (m *QueryRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *QueryRequest) GetRandom() string {
	if m != nil {
		return m.Random
	}
	return ""
}

func (m *QueryRequest) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type QueryAssetResponse struct {
	Code int32           `protobuf:"varint,1,opt,name=code" json:"code"`
	Data *QueryAssetData `protobuf:"bytes,2,opt,name=data" json:"data"`
	Msg  string          `protobuf:"bytes,3,opt,name=msg" json:"msg"`
}

func (m *QueryAssetResponse) Reset()                    { *m = QueryAssetResponse{} }
func (m *QueryAssetResponse) String() string            { return proto.CompactTextString(m) }
func (*QueryAssetResponse) ProtoMessage()               {}
func (*QueryAssetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *QueryAssetResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *QueryAssetResponse) GetData() *QueryAssetData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *QueryAssetResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type QueryAssetData struct {
	PageNum  uint32       `protobuf:"varint,1,opt,name=page_num,json=pageNum" json:"page_num"`
	RowCount uint32       `protobuf:"varint,2,opt,name=row_count,json=rowCount" json:"row_count"`
	Row      []*AssetData `protobuf:"bytes,3,rep,name=row" json:"row"`
}

func (m *QueryAssetData) Reset()                    { *m = QueryAssetData{} }
func (m *QueryAssetData) String() string            { return proto.CompactTextString(m) }
func (*QueryAssetData) ProtoMessage()               {}
func (*QueryAssetData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *QueryAssetData) GetPageNum() uint32 {
	if m != nil {
		return m.PageNum
	}
	return 0
}

func (m *QueryAssetData) GetRowCount() uint32 {
	if m != nil {
		return m.RowCount
	}
	return 0
}

func (m *QueryAssetData) GetRow() []*AssetData {
	if m != nil {
		return m.Row
	}
	return nil
}

type AssetData struct {
	AssetId     string `protobuf:"bytes,1,opt,name=asset_id,json=assetId" json:"asset_id"`
	Username    string `protobuf:"bytes,2,opt,name=username" json:"username"`
	AssetName   string `protobuf:"bytes,3,opt,name=asset_name,json=assetName" json:"asset_name"`
	AssetType   string `protobuf:"bytes,4,opt,name=asset_type,json=assetType" json:"asset_type"`
	FeatureTag  string `protobuf:"bytes,5,opt,name=feature_tag,json=featureTag" json:"feature_tag"`
	SampleHash  string `protobuf:"bytes,6,opt,name=sample_hash,json=sampleHash" json:"sample_hash"`
	StorageHash string `protobuf:"bytes,7,opt,name=storage_hash,json=storageHash" json:"storage_hash"`
	ExpireTime  uint32 `protobuf:"varint,8,opt,name=expire_time,json=expireTime" json:"expire_time"`
	OpType      uint32 `protobuf:"varint,9,opt,name=op_type,json=opType" json:"op_type"`
	Price       uint64 `protobuf:"varint,10,opt,name=price" json:"price"`
	Description string `protobuf:"bytes,11,opt,name=description" json:"description"`
	CreateTime  uint64 `protobuf:"varint,12,opt,name=create_time,json=createTime" json:"create_time"`
}

func (m *AssetData) Reset()                    { *m = AssetData{} }
func (m *AssetData) String() string            { return proto.CompactTextString(m) }
func (*AssetData) ProtoMessage()               {}
func (*AssetData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *AssetData) GetAssetId() string {
	if m != nil {
		return m.AssetId
	}
	return ""
}

func (m *AssetData) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *AssetData) GetAssetName() string {
	if m != nil {
		return m.AssetName
	}
	return ""
}

func (m *AssetData) GetAssetType() string {
	if m != nil {
		return m.AssetType
	}
	return ""
}

func (m *AssetData) GetFeatureTag() string {
	if m != nil {
		return m.FeatureTag
	}
	return ""
}

func (m *AssetData) GetSampleHash() string {
	if m != nil {
		return m.SampleHash
	}
	return ""
}

func (m *AssetData) GetStorageHash() string {
	if m != nil {
		return m.StorageHash
	}
	return ""
}

func (m *AssetData) GetExpireTime() uint32 {
	if m != nil {
		return m.ExpireTime
	}
	return 0
}

func (m *AssetData) GetOpType() uint32 {
	if m != nil {
		return m.OpType
	}
	return 0
}

func (m *AssetData) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *AssetData) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *AssetData) GetCreateTime() uint64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

type QueryMyNoticeRequest struct {
	PageSize  uint32 `protobuf:"varint,1,opt,name=page_size,json=pageSize" json:"page_size"`
	PageNum   uint32 `protobuf:"varint,2,opt,name=page_num,json=pageNum" json:"page_num"`
	Username  string `protobuf:"bytes,3,opt,name=username" json:"username"`
	Random    string `protobuf:"bytes,4,opt,name=random" json:"random"`
	Signature string `protobuf:"bytes,5,opt,name=signature" json:"signature"`
}

func (m *QueryMyNoticeRequest) Reset()                    { *m = QueryMyNoticeRequest{} }
func (m *QueryMyNoticeRequest) String() string            { return proto.CompactTextString(m) }
func (*QueryMyNoticeRequest) ProtoMessage()               {}
func (*QueryMyNoticeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *QueryMyNoticeRequest) GetPageSize() uint32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *QueryMyNoticeRequest) GetPageNum() uint32 {
	if m != nil {
		return m.PageNum
	}
	return 0
}

func (m *QueryMyNoticeRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *QueryMyNoticeRequest) GetRandom() string {
	if m != nil {
		return m.Random
	}
	return ""
}

func (m *QueryMyNoticeRequest) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type QueryMyNoticeResponse struct {
	Code int32            `protobuf:"varint,1,opt,name=code" json:"code"`
	Data *QueryNoticeData `protobuf:"bytes,2,opt,name=data" json:"data"`
	Msg  string           `protobuf:"bytes,3,opt,name=msg" json:"msg"`
}

func (m *QueryMyNoticeResponse) Reset()                    { *m = QueryMyNoticeResponse{} }
func (m *QueryMyNoticeResponse) String() string            { return proto.CompactTextString(m) }
func (*QueryMyNoticeResponse) ProtoMessage()               {}
func (*QueryMyNoticeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *QueryMyNoticeResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *QueryMyNoticeResponse) GetData() *QueryNoticeData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *QueryMyNoticeResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type QueryNoticeData struct {
	PageNum  uint32            `protobuf:"varint,1,opt,name=pageNum" json:"pageNum"`
	RowCount uint32            `protobuf:"varint,2,opt,name=rowCount" json:"rowCount"`
	Row      []*QueryNoticeRow `protobuf:"bytes,3,rep,name=row" json:"row"`
}

func (m *QueryNoticeData) Reset()                    { *m = QueryNoticeData{} }
func (m *QueryNoticeData) String() string            { return proto.CompactTextString(m) }
func (*QueryNoticeData) ProtoMessage()               {}
func (*QueryNoticeData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *QueryNoticeData) GetPageNum() uint32 {
	if m != nil {
		return m.PageNum
	}
	return 0
}

func (m *QueryNoticeData) GetRowCount() uint32 {
	if m != nil {
		return m.RowCount
	}
	return 0
}

func (m *QueryNoticeData) GetRow() []*QueryNoticeRow {
	if m != nil {
		return m.Row
	}
	return nil
}

type QueryNoticeRow struct {
	Username    string `protobuf:"bytes,1,opt,name=username" json:"username"`
	NoticeId    string `protobuf:"bytes,2,opt,name=notice_id,json=noticeId" json:"notice_id"`
	AssetId     string `protobuf:"bytes,3,opt,name=asset_id,json=assetId" json:"asset_id"`
	AssetName   string `protobuf:"bytes,4,opt,name=asset_name,json=assetName" json:"asset_name"`
	DataReqId   string `protobuf:"bytes,5,opt,name=data_req_id,json=dataReqId" json:"data_req_id"`
	DataReqName string `protobuf:"bytes,6,opt,name=data_req_name,json=dataReqName" json:"data_req_name"`
	Consumer    string `protobuf:"bytes,7,opt,name=consumer" json:"consumer"`
	ReadFlag    string `protobuf:"bytes,8,opt,name=read_flag,json=readFlag" json:"read_flag"`
	Time        uint64 `protobuf:"varint,9,opt,name=time" json:"time"`
}

func (m *QueryNoticeRow) Reset()                    { *m = QueryNoticeRow{} }
func (m *QueryNoticeRow) String() string            { return proto.CompactTextString(m) }
func (*QueryNoticeRow) ProtoMessage()               {}
func (*QueryNoticeRow) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *QueryNoticeRow) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *QueryNoticeRow) GetNoticeId() string {
	if m != nil {
		return m.NoticeId
	}
	return ""
}

func (m *QueryNoticeRow) GetAssetId() string {
	if m != nil {
		return m.AssetId
	}
	return ""
}

func (m *QueryNoticeRow) GetAssetName() string {
	if m != nil {
		return m.AssetName
	}
	return ""
}

func (m *QueryNoticeRow) GetDataReqId() string {
	if m != nil {
		return m.DataReqId
	}
	return ""
}

func (m *QueryNoticeRow) GetDataReqName() string {
	if m != nil {
		return m.DataReqName
	}
	return ""
}

func (m *QueryNoticeRow) GetConsumer() string {
	if m != nil {
		return m.Consumer
	}
	return ""
}

func (m *QueryNoticeRow) GetReadFlag() string {
	if m != nil {
		return m.ReadFlag
	}
	return ""
}

func (m *QueryNoticeRow) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func init() {
	proto.RegisterType((*PushTxRequest)(nil), "PushTxRequest")
	proto.RegisterType((*GetFileUploadURLRequest)(nil), "GetFileUploadURLRequest")
	proto.RegisterType((*GetFileUploadURLResponse)(nil), "GetFileUploadURLResponse")
	proto.RegisterType((*RegisterFileResponse)(nil), "RegisterFileResponse")
	proto.RegisterType((*QueryUploadedDataResponse)(nil), "QueryUploadedDataResponse")
	proto.RegisterType((*QueryUploadedData)(nil), "QueryUploadedData")
	proto.RegisterType((*QueryUploadedRow)(nil), "QueryUploadedRow")
	proto.RegisterType((*RegisterResponse)(nil), "RegisterResponse")
	proto.RegisterType((*GetDownLoadURLRequest)(nil), "GetDownLoadURLRequest")
	proto.RegisterType((*GetDownLoadURLResponse)(nil), "GetDownLoadURLResponse")
	proto.RegisterType((*PreSaleNoticeResponse)(nil), "PreSaleNoticeResponse")
	proto.RegisterType((*QueryRequest)(nil), "QueryRequest")
	proto.RegisterType((*QueryAssetResponse)(nil), "QueryAssetResponse")
	proto.RegisterType((*QueryAssetData)(nil), "QueryAssetData")
	proto.RegisterType((*AssetData)(nil), "AssetData")
	proto.RegisterType((*QueryMyNoticeRequest)(nil), "QueryMyNoticeRequest")
	proto.RegisterType((*QueryMyNoticeResponse)(nil), "QueryMyNoticeResponse")
	proto.RegisterType((*QueryNoticeData)(nil), "QueryNoticeData")
	proto.RegisterType((*QueryNoticeRow)(nil), "QueryNoticeRow")
}

func init() { proto.RegisterFile("asset.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1149 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x57, 0x4d, 0x73, 0xdb, 0x36,
	0x13, 0xd6, 0x97, 0x65, 0x71, 0x65, 0xc5, 0x36, 0x5e, 0x5b, 0x66, 0x64, 0xe7, 0x8d, 0xcd, 0x74,
	0x3a, 0x3e, 0xf1, 0xe0, 0xb6, 0xd3, 0xe9, 0xad, 0x6e, 0x32, 0x49, 0x3d, 0xe3, 0xa8, 0x0e, 0xe3,
	0x9c, 0x39, 0xb0, 0x08, 0xd3, 0xec, 0x90, 0x04, 0x0d, 0x90, 0x75, 0x94, 0xdf, 0xd1, 0x43, 0x8f,
	0xf9, 0x1d, 0x3d, 0xf4, 0x3f, 0xf5, 0xd6, 0x63, 0x07, 0x0b, 0x92, 0x22, 0x29, 0xd5, 0x9d, 0xb6,
	0x9e, 0x69, 0x6f, 0xdc, 0x0f, 0x2c, 0xa0, 0x07, 0xcf, 0x3e, 0x0b, 0xc1, 0x90, 0x4a, 0xc9, 0x52,
	0x3b, 0x11, 0x3c, 0xe5, 0xd6, 0xc7, 0x0e, 0x8c, 0x2e, 0x32, 0x79, 0x73, 0xf9, 0xde, 0x61, 0xb7,
	0x19, 0x93, 0x29, 0x31, 0x61, 0xfd, 0x07, 0x26, 0x64, 0xc0, 0x63, 0xb3, 0x7d, 0xd8, 0x3e, 0x1e,
	0x39, 0x85, 0x49, 0x9e, 0x00, 0xcc, 0x32, 0x21, 0xb9, 0x70, 0xe3, 0x2c, 0x32, 0x3b, 0x18, 0x34,
	0xb4, 0x67, 0x9a, 0x45, 0xe4, 0x08, 0x36, 0xf2, 0x70, 0x48, 0xaf, 0x58, 0x68, 0x76, 0x31, 0x61,
	0xa8, 0x7d, 0xe7, 0xca, 0x45, 0x26, 0x30, 0x08, 0x83, 0x6b, 0x96, 0x06, 0x11, 0x33, 0x7b, 0x87,
	0xed, 0xe3, 0x9e, 0x53, 0xda, 0x64, 0x0c, 0x7d, 0xc9, 0x62, 0x8f, 0x09, 0x73, 0xed, 0xb0, 0x7d,
	0x6c, 0x38, 0xb9, 0xa5, 0xd6, 0xcc, 0x78, 0x9c, 0x0a, 0x3a, 0x4b, 0xcd, 0x3e, 0x46, 0x4a, 0x5b,
	0xad, 0x89, 0x58, 0x7a, 0xc3, 0x3d, 0x73, 0x5d, 0xaf, 0xd1, 0x16, 0xd9, 0x81, 0xb5, 0x84, 0x0a,
	0x1a, 0x99, 0x03, 0x74, 0x6b, 0x83, 0xec, 0xc1, 0xba, 0x0c, 0x7c, 0x97, 0x86, 0xbe, 0x69, 0xe0,
	0xd9, 0xfa, 0x32, 0xf0, 0x4f, 0x43, 0x9f, 0x1c, 0x80, 0x21, 0x03, 0x3f, 0xa6, 0x69, 0x26, 0x98,
	0x09, 0xb8, 0x64, 0xe1, 0xb0, 0xbe, 0x80, 0xbd, 0x57, 0x2c, 0x7d, 0x19, 0x84, 0xec, 0x5d, 0x12,
	0x72, 0xea, 0xbd, 0x73, 0xce, 0x0b, 0xac, 0x26, 0x30, 0x48, 0xb8, 0x4c, 0xbf, 0xe1, 0xde, 0x1c,
	0xc1, 0x32, 0x9c, 0xd2, 0xb6, 0x2e, 0xc1, 0x5c, 0x5e, 0x26, 0x13, 0x1e, 0x4b, 0x46, 0x08, 0xf4,
	0x66, 0xdc, 0x63, 0x39, 0xc0, 0xf8, 0x4d, 0xb6, 0xa0, 0x1b, 0x49, 0x1f, 0x61, 0x35, 0x1c, 0xf5,
	0xa9, 0xb2, 0x3c, 0x9a, 0x52, 0x04, 0xd2, 0x70, 0xf0, 0xdb, 0xba, 0x80, 0x1d, 0x87, 0xf9, 0x81,
	0x4c, 0x99, 0x50, 0xa5, 0x1f, 0xa0, 0x62, 0x00, 0x8f, 0xdf, 0x64, 0x4c, 0xcc, 0xf5, 0x29, 0x99,
	0xf7, 0x82, 0xa6, 0x74, 0x65, 0xd9, 0xb5, 0xbc, 0xec, 0xa7, 0x79, 0x11, 0x55, 0x77, 0x78, 0x42,
	0xec, 0xe5, 0xd5, 0x18, 0x2f, 0xb6, 0xef, 0x96, 0xdb, 0x5b, 0x31, 0x6c, 0x2f, 0x25, 0x2b, 0xbe,
	0x25, 0xd4, 0x67, 0xd3, 0x2c, 0x2a, 0xf8, 0x96, 0x9b, 0x0a, 0x5d, 0xc1, 0xef, 0x9e, 0xf3, 0x2c,
	0x4e, 0x73, 0xb6, 0x95, 0x36, 0x79, 0x06, 0x5d, 0xc1, 0xef, 0xcc, 0xee, 0x61, 0xf7, 0x78, 0x78,
	0xb2, 0x5d, 0x3f, 0x83, 0xc3, 0xef, 0x1c, 0x15, 0xb5, 0x7e, 0xe9, 0xc0, 0x56, 0x33, 0xa2, 0xaa,
	0x66, 0x92, 0x89, 0x98, 0x46, 0xac, 0xb8, 0xb3, 0xc2, 0x26, 0xfb, 0x60, 0x5c, 0x07, 0x21, 0x73,
	0x6f, 0xa8, 0xbc, 0xc9, 0x71, 0x1b, 0x28, 0xc7, 0xb7, 0x54, 0xde, 0x94, 0x41, 0x5c, 0xd9, 0x5d,
	0x04, 0xa7, 0xd5, 0x95, 0x32, 0xf8, 0x50, 0x52, 0x5b, 0x39, 0xde, 0x06, 0x1f, 0x18, 0x79, 0x0a,
	0x43, 0x0c, 0x26, 0x3c, 0x0c, 0x66, 0xf3, 0x9c, 0xdf, 0xa0, 0x5c, 0x17, 0xe8, 0x29, 0x13, 0xe2,
	0x2c, 0xba, 0x62, 0x02, 0x69, 0xde, 0xd3, 0x09, 0x53, 0xf4, 0x90, 0x03, 0x00, 0x19, 0x44, 0x2e,
	0x17, 0x2e, 0x95, 0x12, 0xc9, 0x3e, 0x72, 0x06, 0x32, 0x88, 0xbe, 0x13, 0xa7, 0x52, 0x2a, 0x62,
	0xf3, 0xc4, 0x4d, 0xe7, 0x09, 0x43, 0xc2, 0x8f, 0x9c, 0x3e, 0x4f, 0x2e, 0xe7, 0x09, 0x53, 0x1d,
	0x2b, 0x53, 0x2e, 0x98, 0x4b, 0x3d, 0x4f, 0x20, 0xe9, 0x15, 0xb3, 0x95, 0xe7, 0xd4, 0xf3, 0x84,
	0xda, 0x76, 0x26, 0x18, 0x4d, 0x99, 0x8b, 0x1d, 0x09, 0x7a, 0x5b, 0xed, 0xba, 0x0c, 0x22, 0x66,
	0x9d, 0xc3, 0x56, 0xc1, 0xb6, 0x07, 0x60, 0xda, 0xcf, 0x6d, 0xd8, 0x7d, 0xc5, 0xd2, 0x17, 0xfc,
	0x2e, 0x3e, 0xaf, 0xf7, 0xd1, 0x3e, 0x18, 0xea, 0xd2, 0x35, 0x7a, 0xba, 0xf0, 0x40, 0x39, 0x10,
	0xbd, 0xc7, 0x80, 0xdf, 0x15, 0xd1, 0xa9, 0x32, 0xa4, 0xbc, 0xcb, 0x6e, 0xe3, 0x2e, 0xc7, 0xd0,
	0x17, 0x34, 0xf6, 0x78, 0x84, 0xd7, 0x61, 0x38, 0xb9, 0xa5, 0xc0, 0x42, 0xac, 0x03, 0xaf, 0x10,
	0x1a, 0x65, 0x9e, 0x79, 0x75, 0x15, 0xe8, 0x37, 0x55, 0xc0, 0x81, 0x71, 0xf3, 0xec, 0xff, 0x18,
	0x90, 0x37, 0xb0, 0x7b, 0x21, 0xd8, 0x5b, 0x1a, 0xb2, 0x29, 0x4f, 0x83, 0xd9, 0x43, 0x74, 0xf3,
	0x4f, 0x6d, 0xd8, 0x40, 0xca, 0xff, 0x1b, 0xd0, 0xd6, 0x10, 0x5c, 0x6b, 0x22, 0xe8, 0x02, 0xc1,
	0x93, 0x9d, 0xaa, 0xf1, 0x73, 0xaf, 0xc2, 0x3c, 0xab, 0x29, 0xcc, 0xa6, 0xbd, 0x58, 0x76, 0xaf,
	0xbc, 0x5c, 0xc3, 0xa3, 0x7a, 0x66, 0xed, 0xf7, 0x35, 0xc4, 0x65, 0x1f, 0x0c, 0xc1, 0xef, 0xdc,
	0xd9, 0x4a, 0x75, 0x39, 0xa8, 0xaa, 0x0b, 0xd8, 0x8b, 0xad, 0x51, 0x56, 0x7e, 0xeb, 0x80, 0x51,
	0xdb, 0x03, 0x07, 0xaa, 0x22, 0x94, 0xd6, 0x93, 0x75, 0xb4, 0xcf, 0xbc, 0x1a, 0x86, 0x9d, 0x06,
	0x86, 0x4f, 0x00, 0xf4, 0xb2, 0x0a, 0xc2, 0x06, 0x7a, 0xa6, 0xb5, 0x30, 0x76, 0x75, 0xaf, 0x12,
	0xc6, 0xc6, 0x56, 0x82, 0xc1, 0x10, 0x56, 0x37, 0xa5, 0x7e, 0xa9, 0x28, 0xda, 0x75, 0x49, 0x7d,
	0x95, 0x20, 0x69, 0x94, 0x14, 0x5a, 0xa6, 0xe9, 0x0c, 0xda, 0x85, 0x6a, 0x76, 0x04, 0x1b, 0x4a,
	0x08, 0x14, 0x3a, 0x98, 0xa1, 0x07, 0xe8, 0x30, 0xf7, 0x61, 0xca, 0x53, 0x18, 0xb2, 0xf7, 0x49,
	0x20, 0x72, 0x79, 0xd0, 0xd2, 0x02, 0xda, 0xa5, 0xe4, 0xa1, 0xaa, 0x3b, 0x46, 0x4d, 0x77, 0xd4,
	0xfc, 0x15, 0xc1, 0xac, 0x90, 0x14, 0x6d, 0x90, 0x43, 0x18, 0x7a, 0x4c, 0xce, 0x44, 0x90, 0xa4,
	0xea, 0x75, 0x31, 0xd4, 0x3b, 0x56, 0x5c, 0x4d, 0x41, 0xda, 0x58, 0x12, 0xa4, 0x8f, 0x6d, 0xd8,
	0xc1, 0x3b, 0x7e, 0x3d, 0x2f, 0x5a, 0xe6, 0xbf, 0x46, 0xf3, 0x19, 0xec, 0x36, 0x4e, 0x78, 0x0f,
	0xd3, 0x3f, 0xa9, 0x31, 0x7d, 0x4b, 0x33, 0x5d, 0xaf, 0xbb, 0x97, 0xea, 0xdf, 0xc3, 0x66, 0x23,
	0xf5, 0x6f, 0xce, 0xd1, 0xa3, 0x2a, 0xd3, 0x37, 0xab, 0xfb, 0x97, 0x53, 0xf4, 0xc7, 0x4e, 0xde,
	0x57, 0xa5, 0xff, 0xcf, 0x66, 0x68, 0x8c, 0x89, 0xaa, 0x21, 0x72, 0xd6, 0x6b, 0xc7, 0x99, 0x57,
	0x6b, 0x96, 0x6e, 0xbd, 0x59, 0xea, 0x0d, 0xd1, 0x6b, 0x36, 0xc4, 0xff, 0x61, 0xa8, 0xb0, 0x70,
	0x05, 0xbb, 0x5d, 0x48, 0xb7, 0xe1, 0xe1, 0x63, 0xe5, 0xf6, 0xcc, 0x23, 0x16, 0x8c, 0xca, 0x38,
	0x56, 0xe8, 0xe7, 0xf4, 0xd2, 0x19, 0x58, 0x43, 0x3f, 0x25, 0x65, 0x16, 0x31, 0x91, 0xf3, 0xbd,
	0xb4, 0x51, 0x0f, 0x18, 0xf5, 0xdc, 0xeb, 0x90, 0xfa, 0xf9, 0xb3, 0x71, 0xa0, 0x1c, 0x2f, 0x43,
	0x8a, 0x4a, 0x8b, 0x84, 0x34, 0x90, 0x90, 0xf8, 0x7d, 0xf2, 0x6b, 0x17, 0xd6, 0x50, 0x05, 0xc8,
	0x97, 0xb0, 0x51, 0x7d, 0x93, 0x91, 0x47, 0x76, 0xed, 0x45, 0x3d, 0xd9, 0xb5, 0x57, 0x3d, 0xd9,
	0xac, 0x16, 0xf9, 0x7a, 0xd5, 0x7b, 0x68, 0x64, 0x57, 0xf5, 0x7b, 0x32, 0xb1, 0xff, 0xf0, 0x75,
	0x66, 0xb5, 0xc8, 0x73, 0x78, 0x54, 0x9f, 0x4a, 0x64, 0x6c, 0xaf, 0x1c, 0xb1, 0x93, 0x3d, 0x7b,
	0xf5, 0xf8, 0xb2, 0x5a, 0xe4, 0x73, 0x18, 0x15, 0x07, 0xd4, 0x3f, 0xa8, 0xf9, 0x03, 0xb6, 0xed,
	0xe6, 0x2b, 0xc0, 0x6a, 0x91, 0x13, 0x80, 0x85, 0xda, 0x36, 0x4f, 0xfd, 0x3f, 0x7b, 0x59, 0xea,
	0xad, 0x16, 0xf9, 0x0a, 0x46, 0xb5, 0x81, 0xb7, 0xb4, 0xd3, 0xd8, 0x5e, 0x39, 0x10, 0x11, 0xab,
	0x51, 0xad, 0xad, 0xc8, 0xae, 0xbd, 0x4a, 0x08, 0x26, 0x63, 0x7b, 0x65, 0xf7, 0x59, 0x2d, 0x72,
	0x9a, 0xd3, 0xf8, 0xf5, 0x3c, 0xdf, 0xe3, 0x2f, 0x97, 0xb8, 0xea, 0xe3, 0x9f, 0xa6, 0xcf, 0x7e,
	0x0f, 0x00, 0x00, 0xff, 0xff, 0xd5, 0x26, 0x3d, 0x17, 0x43, 0x0d, 0x00, 0x00,
}
